diff --git a/.gitignore b/.gitignore
index f3a5939..7053b55 100644
--- a/.gitignore
+++ b/.gitignore
@@ -37,4 +37,10 @@ ENV/
 .docker/
 
 # Database
-*.sqlite3
\ No newline at end of file
+*.sqlite3
+test.db
+
+# Testing
+.pytest_cache/
+.coverage
+htmlcov/
diff --git a/.output.txt b/.output.txt
index 6baf936..f92439e 100644
--- a/.output.txt
+++ b/.output.txt
@@ -1,1477 +1,225 @@
-./app/core/__pycache__
-./app/core/__pycache__/database.cpython-311.pyc
-./app/core/__pycache__/__init__.cpython-311.pyc
-./app/models/__pycache__
-./app/models/__pycache__/models.cpython-311.pyc
-./app/models/__pycache__/__init__.cpython-311.pyc
-./app/__pycache__
-./app/__pycache__/main.cpython-311.pyc
-./app/__pycache__/__init__.cpython-311.pyc
-./app/schemas/__pycache__
-./app/schemas/__pycache__/schemas.cpython-311.pyc
-./app/schemas/__pycache__/__init__.cpython-311.pyc
-./app/crud/__pycache__
-./app/crud/__pycache__/crud.cpython-311.pyc
-./app/crud/__pycache__/__init__.cpython-311.pyc
-./app/api/__pycache__
-./app/api/__pycache__/routes.cpython-311.pyc
-./app/api/__pycache__/__init__.cpython-311.pyc
-./.pytest_cache
-./config/__pycache__
-./config/__pycache__/database.cpython-311.pyc
-./tests/unit/__pycache__
-./tests/unit/__pycache__/test_crud.cpython-311-pytest-8.3.3.pyc
-./tests/unit/__pycache__/test_models.cpython-311-pytest-8.3.3.pyc
-./tests/integration/__pycache__
-./tests/integration/__pycache__/test_routes.cpython-311-pytest-8.3.3.pyc
-./tests/__pycache__
-./tests/__pycache__/conftest.cpython-311-pytest-8.3.3.pyc
-./__pycache__
-./__pycache__/schemas.cpython-311.pyc
-./__pycache__/models.cpython-311.pyc
-./__pycache__/crud.cpython-311.pyc
-./venv/lib/python3.11/site-packages/packaging/licenses/__pycache__
-./venv/lib/python3.11/site-packages/packaging/licenses/__pycache__/_spdx.cpython-311.pyc
-./venv/lib/python3.11/site-packages/packaging/licenses/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/packaging/__pycache__
-./venv/lib/python3.11/site-packages/packaging/__pycache__/markers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/packaging/__pycache__/requirements.cpython-311.pyc
-./venv/lib/python3.11/site-packages/packaging/__pycache__/_musllinux.cpython-311.pyc
-./venv/lib/python3.11/site-packages/packaging/__pycache__/tags.cpython-311.pyc
-./venv/lib/python3.11/site-packages/packaging/__pycache__/utils.cpython-311.pyc
-./venv/lib/python3.11/site-packages/packaging/__pycache__/metadata.cpython-311.pyc
-./venv/lib/python3.11/site-packages/packaging/__pycache__/_tokenizer.cpython-311.pyc
-./venv/lib/python3.11/site-packages/packaging/__pycache__/_manylinux.cpython-311.pyc

-./venv/lib/python3.11/site-packages/packaging/__pycache__/_parser.cpython-311.pyc
-./venv/lib/python3.11/site-packages/packaging/__pycache__/_elffile.cpython-311.pyc
-./venv/lib/python3.11/site-packages/packaging/__pycache__/version.cpython-311.pyc
-./venv/lib/python3.11/site-packages/packaging/__pycache__/specifiers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/packaging/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/packaging/__pycache__/_structures.cpython-311.pyc
-./venv/lib/python3.11/site-packages/markupsafe/__pycache__
-./venv/lib/python3.11/site-packages/markupsafe/__pycache__/_native.cpython-311.pyc
-./venv/lib/python3.11/site-packages/markupsafe/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/h11/tests/__pycache__
-./venv/lib/python3.11/site-packages/h11/tests/__pycache__/test_state.cpython-311.pyc
-./venv/lib/python3.11/site-packages/h11/tests/__pycache__/helpers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/h11/tests/__pycache__/test_util.cpython-311.pyc
-./venv/lib/python3.11/site-packages/h11/tests/__pycache__/test_events.cpython-311.pyc
-./venv/lib/python3.11/site-packages/h11/tests/__pycache__/test_connection.cpython-311.pyc
-./venv/lib/python3.11/site-packages/h11/tests/__pycache__/test_io.cpython-311.pyc
-./venv/lib/python3.11/site-packages/h11/tests/__pycache__/test_against_stdlib_http.cpython-311.pyc
-./venv/lib/python3.11/site-packages/h11/tests/__pycache__/test_helpers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/h11/tests/__pycache__/test_receivebuffer.cpython-311.pyc
-./venv/lib/python3.11/site-packages/h11/tests/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/h11/tests/__pycache__/test_headers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/h11/__pycache__
-./venv/lib/python3.11/site-packages/h11/__pycache__/_state.cpython-311.pyc
-./venv/lib/python3.11/site-packages/h11/__pycache__/_headers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/h11/__pycache__/_writers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/h11/__pycache__/_abnf.cpython-311.pyc
-./venv/lib/python3.11/site-packages/h11/__pycache__/_util.cpython-311.pyc
-./venv/lib/python3.11/site-packages/h11/__pycache__/_readers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/h11/__pycache__/_version.cpython-311.pyc
-./venv/lib/python3.11/site-packages/h11/__pycache__/_connection.cpython-311.pyc
-./venv/lib/python3.11/site-packages/h11/__pycache__/_events.cpython-311.pyc
-./venv/lib/python3.11/site-packages/h11/__pycache__/_receivebuffer.cpython-311.pyc
-./venv/lib/python3.11/site-packages/h11/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dotenv/__pycache__
-./venv/lib/python3.11/site-packages/dotenv/__pycache__/ipython.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dotenv/__pycache__/main.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dotenv/__pycache__/variables.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dotenv/__pycache__/cli.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dotenv/__pycache__/parser.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dotenv/__pycache__/version.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dotenv/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dotenv/__pycache__/__main__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/annotated_types/__pycache__
-./venv/lib/python3.11/site-packages/annotated_types/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/annotated_types/__pycache__/test_cases.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/ext/__pycache__
-./venv/lib/python3.11/site-packages/mako/ext/__pycache__/pygmentplugin.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/ext/__pycache__/autohandler.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/ext/__pycache__/preprocessors.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/ext/__pycache__/beaker_cache.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/ext/__pycache__/linguaplugin.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/ext/__pycache__/turbogears.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/ext/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/ext/__pycache__/extract.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/ext/__pycache__/babelplugin.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/__pycache__
-./venv/lib/python3.11/site-packages/mako/__pycache__/lookup.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/__pycache__/cmd.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/__pycache__/runtime.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/__pycache__/filters.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/__pycache__/lexer.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/__pycache__/compat.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/__pycache__/pygen.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/__pycache__/template.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/__pycache__/codegen.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/__pycache__/cache.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/__pycache__/exceptions.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/__pycache__/pyparser.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/__pycache__/util.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/__pycache__/parsetree.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/__pycache__/_ast_util.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/__pycache__/ast.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/testing/__pycache__
-./venv/lib/python3.11/site-packages/mako/testing/__pycache__/helpers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/testing/__pycache__/exclusions.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/testing/__pycache__/config.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/testing/__pycache__/_config.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/testing/__pycache__/fixtures.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/testing/__pycache__/assertions.cpython-311.pyc
-./venv/lib/python3.11/site-packages/mako/testing/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/bcrypt/__pycache__
-./venv/lib/python3.11/site-packages/bcrypt/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/middleware/__pycache__
-./venv/lib/python3.11/site-packages/starlette/middleware/__pycache__/gzip.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/middleware/__pycache__/base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/middleware/__pycache__/httpsredirect.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/middleware/__pycache__/errors.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/middleware/__pycache__/sessions.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/middleware/__pycache__/cors.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/middleware/__pycache__/authentication.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/middleware/__pycache__/exceptions.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/middleware/__pycache__/trustedhost.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/middleware/__pycache__/wsgi.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/middleware/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/__pycache__
-./venv/lib/python3.11/site-packages/starlette/__pycache__/routing.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/__pycache__/datastructures.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/__pycache__/schemas.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/__pycache__/_exception_handler.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/__pycache__/config.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/__pycache__/testclient.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/__pycache__/requests.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/__pycache__/staticfiles.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/__pycache__/background.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/__pycache__/authentication.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/__pycache__/responses.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/__pycache__/convertors.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/__pycache__/_utils.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/__pycache__/exceptions.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/__pycache__/status.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/__pycache__/types.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/__pycache__/endpoints.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/__pycache__/websockets.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/__pycache__/templating.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/__pycache__/formparsers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/__pycache__/concurrency.cpython-311.pyc
-./venv/lib/python3.11/site-packages/starlette/__pycache__/applications.cpython-311.pyc
-./venv/lib/python3.11/site-packages/idna/__pycache__
-./venv/lib/python3.11/site-packages/idna/__pycache__/codec.cpython-311.pyc
-./venv/lib/python3.11/site-packages/idna/__pycache__/core.cpython-311.pyc
-./venv/lib/python3.11/site-packages/idna/__pycache__/compat.cpython-311.pyc
-./venv/lib/python3.11/site-packages/idna/__pycache__/idnadata.cpython-311.pyc
-./venv/lib/python3.11/site-packages/idna/__pycache__/package_data.cpython-311.pyc
-./venv/lib/python3.11/site-packages/idna/__pycache__/uts46data.cpython-311.pyc
-./venv/lib/python3.11/site-packages/idna/__pycache__/intranges.cpython-311.pyc
-./venv/lib/python3.11/site-packages/idna/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/click/__pycache__
-./venv/lib/python3.11/site-packages/click/__pycache__/_winconsole.cpython-311.pyc
-./venv/lib/python3.11/site-packages/click/__pycache__/core.cpython-311.pyc
-./venv/lib/python3.11/site-packages/click/__pycache__/globals.cpython-311.pyc
-./venv/lib/python3.11/site-packages/click/__pycache__/shell_completion.cpython-311.pyc
-./venv/lib/python3.11/site-packages/click/__pycache__/testing.cpython-311.pyc
-./venv/lib/python3.11/site-packages/click/__pycache__/_termui_impl.cpython-311.pyc
-./venv/lib/python3.11/site-packages/click/__pycache__/_compat.cpython-311.pyc
-./venv/lib/python3.11/site-packages/click/__pycache__/utils.cpython-311.pyc
-./venv/lib/python3.11/site-packages/click/__pycache__/decorators.cpython-311.pyc
-./venv/lib/python3.11/site-packages/click/__pycache__/formatting.cpython-311.pyc
-./venv/lib/python3.11/site-packages/click/__pycache__/exceptions.cpython-311.pyc
-./venv/lib/python3.11/site-packages/click/__pycache__/types.cpython-311.pyc
-./venv/lib/python3.11/site-packages/click/__pycache__/_textwrap.cpython-311.pyc
-./venv/lib/python3.11/site-packages/click/__pycache__/termui.cpython-311.pyc
-./venv/lib/python3.11/site-packages/click/__pycache__/parser.cpython-311.pyc
-./venv/lib/python3.11/site-packages/click/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/__pycache__
-./venv/lib/python3.11/site-packages/__pycache__/typing_extensions.cpython-311.pyc
-./venv/lib/python3.11/site-packages/__pycache__/_virtualenv.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/app/__pycache__
-./venv/lib/python3.11/site-packages/gunicorn/app/__pycache__/pasterapp.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/app/__pycache__/base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/app/__pycache__/wsgiapp.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/app/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/instrument/__pycache__
-./venv/lib/python3.11/site-packages/gunicorn/instrument/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/instrument/__pycache__/statsd.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/__pycache__
-./venv/lib/python3.11/site-packages/gunicorn/__pycache__/arbiter.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/__pycache__/config.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/__pycache__/debug.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/__pycache__/errors.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/__pycache__/reloader.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/__pycache__/systemd.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/__pycache__/sock.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/__pycache__/util.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/__pycache__/pidfile.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/__pycache__/glogging.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/__pycache__/__main__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/http/__pycache__
-./venv/lib/python3.11/site-packages/gunicorn/http/__pycache__/body.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/http/__pycache__/message.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/http/__pycache__/unreader.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/http/__pycache__/errors.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/http/__pycache__/wsgi.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/http/__pycache__/parser.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/http/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/workers/__pycache__
-./venv/lib/python3.11/site-packages/gunicorn/workers/__pycache__/base_async.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/workers/__pycache__/geventlet.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/workers/__pycache__/gthread.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/workers/__pycache__/base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/workers/__pycache__/gtornado.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/workers/__pycache__/ggevent.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/workers/__pycache__/workertmp.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/workers/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/gunicorn/workers/__pycache__/sync.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/connectors/__pycache__
-./venv/lib/python3.11/site-packages/sqlalchemy/connectors/__pycache__/asyncio.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/connectors/__pycache__/pyodbc.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/connectors/__pycache__/aioodbc.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/connectors/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/util/__pycache__
-./venv/lib/python3.11/site-packages/sqlalchemy/util/__pycache__/_py_collections.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/util/__pycache__/typing.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/util/__pycache__/langhelpers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/util/__pycache__/_concurrency_py3k.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/util/__pycache__/queue.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/util/__pycache__/compat.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/util/__pycache__/preloaded.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/util/__pycache__/topological.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/util/__pycache__/deprecations.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/util/__pycache__/tool_support.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/util/__pycache__/_has_cy.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/util/__pycache__/_collections.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/util/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/util/__pycache__/concurrency.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/__pycache__
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/__pycache__/serializer.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/__pycache__/mutable.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/__pycache__/indexable.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/__pycache__/horizontal_shard.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/__pycache__/automap.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/__pycache__/baked.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/__pycache__/hybrid.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/__pycache__/instrumentation.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/__pycache__/orderinglist.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/__pycache__/compiler.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/__pycache__/associationproxy.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/mypy/__pycache__
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/mypy/__pycache__/plugin.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/mypy/__pycache__/apply.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/mypy/__pycache__/names.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/mypy/__pycache__/infer.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/mypy/__pycache__/decl_class.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/mypy/__pycache__/util.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/mypy/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/declarative/__pycache__
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/declarative/__pycache__/extensions.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/declarative/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/asyncio/__pycache__
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/asyncio/__pycache__/exc.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/asyncio/__pycache__/base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/asyncio/__pycache__/result.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/asyncio/__pycache__/session.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/asyncio/__pycache__/scoping.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/asyncio/__pycache__/engine.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/ext/asyncio/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/__pycache__
-./venv/lib/python3.11/site-packages/sqlalchemy/__pycache__/exc.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/__pycache__/schema.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/__pycache__/types.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/__pycache__/log.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/__pycache__/inspection.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/__pycache__/events.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/plugin/__pycache__
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/plugin/__pycache__/plugin_base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/plugin/__pycache__/pytestplugin.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/plugin/__pycache__/bootstrap.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/plugin/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/__pycache__
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/__pycache__/provision.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/__pycache__/profiling.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/__pycache__/exclusions.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/__pycache__/requirements.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/__pycache__/entities.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/__pycache__/config.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/__pycache__/schema.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/__pycache__/assertsql.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/__pycache__/assertions.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/__pycache__/asyncio.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/__pycache__/pickleable.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/__pycache__/warnings.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/__pycache__/engines.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/__pycache__/util.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/fixtures/__pycache__
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/fixtures/__pycache__/mypy.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/fixtures/__pycache__/base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/fixtures/__pycache__/sql.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/fixtures/__pycache__/orm.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/fixtures/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/suite/__pycache__
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/suite/__pycache__/test_reflection.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/suite/__pycache__/test_cte.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/suite/__pycache__/test_deprecations.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/suite/__pycache__/test_ddl.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/suite/__pycache__/test_update_delete.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/suite/__pycache__/test_dialect.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/suite/__pycache__/test_results.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/suite/__pycache__/test_types.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/suite/__pycache__/test_unicode_ddl.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/suite/__pycache__/test_rowcount.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/suite/__pycache__/test_select.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/suite/__pycache__/test_sequence.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/suite/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/testing/suite/__pycache__/test_insert.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/cyextension/__pycache__
-./venv/lib/python3.11/site-packages/sqlalchemy/cyextension/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/postgresql/__pycache__
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/postgresql/__pycache__/named_types.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/postgresql/__pycache__/provision.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/postgresql/__pycache__/asyncpg.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/postgresql/__pycache__/hstore.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/postgresql/__pycache__/base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/postgresql/__pycache__/psycopg2.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/postgresql/__pycache__/array.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/postgresql/__pycache__/pg8000.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/postgresql/__pycache__/_psycopg_common.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/postgresql/__pycache__/dml.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/postgresql/__pycache__/psycopg2cffi.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/postgresql/__pycache__/operators.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/postgresql/__pycache__/types.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/postgresql/__pycache__/json.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/postgresql/__pycache__/ranges.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/postgresql/__pycache__/ext.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/postgresql/__pycache__/pg_catalog.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/postgresql/__pycache__/psycopg.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/postgresql/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/oracle/__pycache__
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/oracle/__pycache__/provision.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/oracle/__pycache__/base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/oracle/__pycache__/dictionary.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/oracle/__pycache__/cx_oracle.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/oracle/__pycache__/oracledb.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/oracle/__pycache__/types.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/oracle/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/sqlite/__pycache__
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/sqlite/__pycache__/provision.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/sqlite/__pycache__/base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/sqlite/__pycache__/pysqlcipher.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/sqlite/__pycache__/aiosqlite.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/sqlite/__pycache__/dml.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/sqlite/__pycache__/pysqlite.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/sqlite/__pycache__/json.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/sqlite/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/__pycache__
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/__pycache__/_typing.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mysql/__pycache__
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mysql/__pycache__/asyncmy.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mysql/__pycache__/provision.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mysql/__pycache__/expression.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mysql/__pycache__/base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mysql/__pycache__/mysqldb.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mysql/__pycache__/aiomysql.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mysql/__pycache__/pymysql.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mysql/__pycache__/reserved_words.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mysql/__pycache__/cymysql.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mysql/__pycache__/reflection.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mysql/__pycache__/dml.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mysql/__pycache__/mariadbconnector.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mysql/__pycache__/pyodbc.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mysql/__pycache__/types.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mysql/__pycache__/json.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mysql/__pycache__/mariadb.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mysql/__pycache__/enumerated.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mysql/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mysql/__pycache__/mysqlconnector.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mssql/__pycache__
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mssql/__pycache__/provision.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mssql/__pycache__/base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mssql/__pycache__/information_schema.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mssql/__pycache__/pyodbc.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mssql/__pycache__/aioodbc.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mssql/__pycache__/json.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mssql/__pycache__/pymssql.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/dialects/mssql/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/exc.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/bulk_persistence.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/evaluator.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/strategy_options.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/_typing.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/state_changes.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/unitofwork.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/session.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/interfaces.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/loading.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/decl_base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/path_registry.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/_orm_constructors.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/decl_api.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/collections.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/context.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/descriptor_props.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/scoping.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/persistence.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/mapper.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/dependency.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/strategies.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/dynamic.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/util.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/state.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/mapped_collection.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/clsregistry.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/properties.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/attributes.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/instrumentation.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/writeonly.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/events.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/query.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/identity.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/relationships.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/orm/__pycache__/sync.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/engine/__pycache__
-./venv/lib/python3.11/site-packages/sqlalchemy/engine/__pycache__/_py_processors.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/engine/__pycache__/mock.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/engine/__pycache__/cursor.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/engine/__pycache__/characteristics.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/engine/__pycache__/base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/engine/__pycache__/result.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/engine/__pycache__/create.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/engine/__pycache__/interfaces.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/engine/__pycache__/row.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/engine/__pycache__/reflection.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/engine/__pycache__/strategies.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/engine/__pycache__/default.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/engine/__pycache__/_py_row.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/engine/__pycache__/util.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/engine/__pycache__/_py_util.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/engine/__pycache__/events.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/engine/__pycache__/processors.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/engine/__pycache__/url.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/engine/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/pool/__pycache__
-./venv/lib/python3.11/site-packages/sqlalchemy/pool/__pycache__/base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/pool/__pycache__/impl.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/pool/__pycache__/events.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/pool/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/event/__pycache__
-./venv/lib/python3.11/site-packages/sqlalchemy/event/__pycache__/api.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/event/__pycache__/base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/event/__pycache__/legacy.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/event/__pycache__/registry.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/event/__pycache__/attr.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/event/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/future/__pycache__
-./venv/lib/python3.11/site-packages/sqlalchemy/future/__pycache__/engine.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/future/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/annotation.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/_typing.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/expression.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/_dml_constructors.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/default_comparator.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/roles.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/_elements_constructors.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/elements.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/sqltypes.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/schema.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/traversals.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/_orm_types.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/_selectable_constructors.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/selectable.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/visitors.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/dml.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/coercions.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/operators.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/lambdas.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/naming.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/util.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/_py_util.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/crud.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/functions.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/events.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/cache_key.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/compiler.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/ddl.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sqlalchemy/sql/__pycache__/type_api.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/abc/__pycache__
-./venv/lib/python3.11/site-packages/anyio/abc/__pycache__/_eventloop.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/abc/__pycache__/_testing.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/abc/__pycache__/_resources.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/abc/__pycache__/_sockets.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/abc/__pycache__/_subprocesses.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/abc/__pycache__/_tasks.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/abc/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/abc/__pycache__/_streams.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/_backends/__pycache__
-./venv/lib/python3.11/site-packages/anyio/_backends/__pycache__/_trio.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/_backends/__pycache__/_asyncio.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/_backends/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/_core/__pycache__
-./venv/lib/python3.11/site-packages/anyio/_core/__pycache__/_eventloop.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/_core/__pycache__/_testing.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/_core/__pycache__/_signals.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/_core/__pycache__/_asyncio_selector_thread.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/_core/__pycache__/_resources.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/_core/__pycache__/_sockets.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/_core/__pycache__/_subprocesses.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/_core/__pycache__/_exceptions.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/_core/__pycache__/_tasks.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/_core/__pycache__/_fileio.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/_core/__pycache__/_synchronization.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/_core/__pycache__/_typedattr.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/_core/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/_core/__pycache__/_streams.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/streams/__pycache__
-./venv/lib/python3.11/site-packages/anyio/streams/__pycache__/buffered.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/streams/__pycache__/file.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/streams/__pycache__/memory.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/streams/__pycache__/text.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/streams/__pycache__/tls.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/streams/__pycache__/stapled.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/streams/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/__pycache__
-./venv/lib/python3.11/site-packages/anyio/__pycache__/to_thread.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/__pycache__/pytest_plugin.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/__pycache__/to_interpreter.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/__pycache__/to_process.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/__pycache__/lowlevel.cpython-311.pyc
-./venv/lib/python3.11/site-packages/anyio/__pycache__/from_thread.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/network/__pycache__
-./venv/lib/python3.11/site-packages/pip/_internal/network/__pycache__/session.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/network/__pycache__/download.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/network/__pycache__/utils.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/network/__pycache__/cache.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/network/__pycache__/auth.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/network/__pycache__/lazy_wheel.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/network/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/utils/__pycache__
-./venv/lib/python3.11/site-packages/pip/_internal/utils/__pycache__/_jaraco_text.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/utils/__pycache__/temp_dir.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/utils/__pycache__/glibc.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/utils/__pycache__/encoding.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/utils/__pycache__/filetypes.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/utils/__pycache__/deprecation.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/utils/__pycache__/compat.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/utils/__pycache__/appdirs.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/utils/__pycache__/logging.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/utils/__pycache__/packaging.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/utils/__pycache__/unpacking.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/utils/__pycache__/setuptools_build.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/utils/__pycache__/urls.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/utils/__pycache__/filesystem.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/utils/__pycache__/misc.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/utils/__pycache__/compatibility_tags.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/utils/__pycache__/wheel.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/utils/__pycache__/egg_link.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/utils/__pycache__/direct_url_helpers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/utils/__pycache__/hashes.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/utils/__pycache__/entrypoints.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/utils/__pycache__/subprocess.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/utils/__pycache__/retry.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/utils/__pycache__/_log.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/utils/__pycache__/virtualenv.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/utils/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/models/__pycache__
-./venv/lib/python3.11/site-packages/pip/_internal/models/__pycache__/target_python.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/models/__pycache__/link.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/models/__pycache__/candidate.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/models/__pycache__/installation_report.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/models/__pycache__/selection_prefs.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/models/__pycache__/wheel.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/models/__pycache__/search_scope.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/models/__pycache__/format_control.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/models/__pycache__/index.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/models/__pycache__/scheme.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/models/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/models/__pycache__/direct_url.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/__pycache__
-./venv/lib/python3.11/site-packages/pip/_internal/__pycache__/build_env.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/__pycache__/self_outdated_check.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/__pycache__/pyproject.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/__pycache__/configuration.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/__pycache__/cache.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/__pycache__/exceptions.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/__pycache__/wheel_builder.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/cli/__pycache__
-./venv/lib/python3.11/site-packages/pip/_internal/cli/__pycache__/req_command.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/cli/__pycache__/main.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/cli/__pycache__/main_parser.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/cli/__pycache__/base_command.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/cli/__pycache__/cmdoptions.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/cli/__pycache__/autocompletion.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/cli/__pycache__/status_codes.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/cli/__pycache__/progress_bars.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/cli/__pycache__/index_command.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/cli/__pycache__/command_context.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/cli/__pycache__/parser.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/cli/__pycache__/spinners.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/cli/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/operations/install/__pycache__
-./venv/lib/python3.11/site-packages/pip/_internal/operations/install/__pycache__/wheel.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/operations/install/__pycache__/editable_legacy.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/operations/install/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/operations/__pycache__
-./venv/lib/python3.11/site-packages/pip/_internal/operations/__pycache__/check.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/operations/__pycache__/prepare.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/operations/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/operations/build/__pycache__
-./venv/lib/python3.11/site-packages/pip/_internal/operations/build/__pycache__/wheel_legacy.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/operations/build/__pycache__/metadata.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/operations/build/__pycache__/wheel_editable.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/operations/build/__pycache__/metadata_legacy.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/operations/build/__pycache__/wheel.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/operations/build/__pycache__/metadata_editable.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/operations/build/__pycache__/build_tracker.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/operations/build/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/req/__pycache__
-./venv/lib/python3.11/site-packages/pip/_internal/req/__pycache__/constructors.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/req/__pycache__/req_install.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/req/__pycache__/req_set.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/req/__pycache__/req_uninstall.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/req/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/req/__pycache__/req_file.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/resolution/__pycache__
-./venv/lib/python3.11/site-packages/pip/_internal/resolution/__pycache__/base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/resolution/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/resolution/resolvelib/__pycache__
-./venv/lib/python3.11/site-packages/pip/_internal/resolution/resolvelib/__pycache__/reporter.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/resolution/resolvelib/__pycache__/resolver.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/resolution/resolvelib/__pycache__/base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/resolution/resolvelib/__pycache__/requirements.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/resolution/resolvelib/__pycache__/provider.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/resolution/resolvelib/__pycache__/candidates.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/resolution/resolvelib/__pycache__/factory.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/resolution/resolvelib/__pycache__/found_candidates.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/resolution/resolvelib/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/vcs/__pycache__
-./venv/lib/python3.11/site-packages/pip/_internal/vcs/__pycache__/versioncontrol.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/vcs/__pycache__/subversion.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/vcs/__pycache__/bazaar.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/vcs/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/vcs/__pycache__/mercurial.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/vcs/__pycache__/git.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/locations/__pycache__
-./venv/lib/python3.11/site-packages/pip/_internal/locations/__pycache__/base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/locations/__pycache__/_sysconfig.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/locations/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/index/__pycache__
-./venv/lib/python3.11/site-packages/pip/_internal/index/__pycache__/sources.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/index/__pycache__/collector.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/index/__pycache__/package_finder.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/index/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/commands/__pycache__
-./venv/lib/python3.11/site-packages/pip/_internal/commands/__pycache__/install.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/commands/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/metadata/__pycache__
-./venv/lib/python3.11/site-packages/pip/_internal/metadata/__pycache__/base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/metadata/__pycache__/pkg_resources.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/metadata/__pycache__/_json.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/metadata/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/metadata/importlib/__pycache__
-./venv/lib/python3.11/site-packages/pip/_internal/metadata/importlib/__pycache__/_compat.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/metadata/importlib/__pycache__/_envs.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/metadata/importlib/__pycache__/_dists.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/metadata/importlib/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/distributions/__pycache__
-./venv/lib/python3.11/site-packages/pip/_internal/distributions/__pycache__/base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/distributions/__pycache__/installed.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/distributions/__pycache__/wheel.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/distributions/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_internal/distributions/__pycache__/sdist.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/packaging/__pycache__
-./venv/lib/python3.11/site-packages/pip/_vendor/packaging/__pycache__/markers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/packaging/__pycache__/requirements.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/packaging/__pycache__/_musllinux.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/packaging/__pycache__/tags.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/packaging/__pycache__/utils.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/packaging/__pycache__/_tokenizer.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/packaging/__pycache__/_manylinux.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/packaging/__pycache__/_parser.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/packaging/__pycache__/_elffile.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/packaging/__pycache__/version.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/packaging/__pycache__/specifiers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/packaging/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/packaging/__pycache__/_structures.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/truststore/__pycache__
-./venv/lib/python3.11/site-packages/pip/_vendor/truststore/__pycache__/_macos.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/truststore/__pycache__/_api.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/truststore/__pycache__/_ssl_constants.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/truststore/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/msgpack/__pycache__
-./venv/lib/python3.11/site-packages/pip/_vendor/msgpack/__pycache__/fallback.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/msgpack/__pycache__/exceptions.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/msgpack/__pycache__/ext.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/msgpack/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/pygments/filters/__pycache__
-./venv/lib/python3.11/site-packages/pip/_vendor/pygments/filters/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/pygments/lexers/__pycache__
-./venv/lib/python3.11/site-packages/pip/_vendor/pygments/lexers/__pycache__/_mapping.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/pygments/lexers/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/pygments/__pycache__
-./venv/lib/python3.11/site-packages/pip/_vendor/pygments/__pycache__/regexopt.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/pygments/__pycache__/plugin.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/pygments/__pycache__/lexer.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/pygments/__pycache__/style.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/pygments/__pycache__/token.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/pygments/__pycache__/modeline.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/pygments/__pycache__/util.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/pygments/__pycache__/filter.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/pygments/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/pygments/styles/__pycache__
-./venv/lib/python3.11/site-packages/pip/_vendor/pygments/styles/__pycache__/_mapping.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/pygments/styles/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/distlib/__pycache__
-./venv/lib/python3.11/site-packages/pip/_vendor/distlib/__pycache__/compat.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/distlib/__pycache__/resources.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/distlib/__pycache__/scripts.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/distlib/__pycache__/util.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/distlib/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/cachecontrol/__pycache__
-./venv/lib/python3.11/site-packages/pip/_vendor/cachecontrol/__pycache__/controller.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/cachecontrol/__pycache__/serialize.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/cachecontrol/__pycache__/filewrapper.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/cachecontrol/__pycache__/adapter.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/cachecontrol/__pycache__/cache.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/cachecontrol/__pycache__/wrapper.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/cachecontrol/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/cachecontrol/caches/__pycache__
-./venv/lib/python3.11/site-packages/pip/_vendor/cachecontrol/caches/__pycache__/file_cache.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/cachecontrol/caches/__pycache__/redis_cache.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/cachecontrol/caches/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/idna/__pycache__
-./venv/lib/python3.11/site-packages/pip/_vendor/idna/__pycache__/core.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/idna/__pycache__/idnadata.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/idna/__pycache__/package_data.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/idna/__pycache__/intranges.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/idna/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/__pycache__
-./venv/lib/python3.11/site-packages/pip/_vendor/__pycache__/typing_extensions.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/requests/__pycache__
-./venv/lib/python3.11/site-packages/pip/_vendor/requests/__pycache__/api.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/requests/__pycache__/__version__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/requests/__pycache__/adapters.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/requests/__pycache__/compat.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/requests/__pycache__/_internal_utils.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/requests/__pycache__/cookies.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/requests/__pycache__/status_codes.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/requests/__pycache__/utils.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/requests/__pycache__/hooks.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/requests/__pycache__/sessions.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/requests/__pycache__/models.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/requests/__pycache__/exceptions.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/requests/__pycache__/auth.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/requests/__pycache__/packages.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/requests/__pycache__/certs.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/requests/__pycache__/structures.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/requests/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/certifi/__pycache__
-./venv/lib/python3.11/site-packages/pip/_vendor/certifi/__pycache__/core.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/certifi/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/pyproject_hooks/__pycache__
-./venv/lib/python3.11/site-packages/pip/_vendor/pyproject_hooks/__pycache__/_impl.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/pyproject_hooks/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/pyproject_hooks/_in_process/__pycache__
-./venv/lib/python3.11/site-packages/pip/_vendor/pyproject_hooks/_in_process/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/theme.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/color.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/segment.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/_emoji_replace.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/highlighter.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/_emoji_codes.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/_ratio.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/ansi.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/file_proxy.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/cells.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/containers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/constrain.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/_log_render.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/style.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/_palettes.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/terminal_theme.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/_cell_widths.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/logging.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/_loop.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/pretty.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/abc.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/scope.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/default_styles.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/_spinners.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/errors.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/progress.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/_fileno.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/text.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/live_render.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/filesize.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/control.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/emoji.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/themes.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/region.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/palette.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/screen.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/measure.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/_extension.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/repr.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/protocol.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/markup.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/jupyter.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/align.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/live.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/_wrap.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/table.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/panel.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/syntax.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/progress_bar.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/pager.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/_export_format.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/styled.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/spinner.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/_pick.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/padding.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/color_triplet.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/console.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/_null_file.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/traceback.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/columns.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/rich/__pycache__/box.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/util/__pycache__
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/util/__pycache__/wait.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/util/__pycache__/queue.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/util/__pycache__/ssltransport.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/util/__pycache__/response.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/util/__pycache__/ssl_match_hostname.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/util/__pycache__/proxy.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/util/__pycache__/timeout.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/util/__pycache__/connection.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/util/__pycache__/url.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/util/__pycache__/retry.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/util/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/util/__pycache__/request.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/util/__pycache__/ssl_.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/__pycache__
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/__pycache__/poolmanager.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/__pycache__/filepost.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/__pycache__/fields.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/__pycache__/connectionpool.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/__pycache__/response.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/__pycache__/_version.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/__pycache__/exceptions.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/__pycache__/connection.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/__pycache__/_collections.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/__pycache__/request.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/contrib/__pycache__
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/contrib/__pycache__/_appengine_environ.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/contrib/__pycache__/socks.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/contrib/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/packages/__pycache__
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/packages/__pycache__/six.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/urllib3/packages/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/pkg_resources/__pycache__
-./venv/lib/python3.11/site-packages/pip/_vendor/pkg_resources/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/resolvelib/compat/__pycache__
-./venv/lib/python3.11/site-packages/pip/_vendor/resolvelib/compat/__pycache__/collections_abc.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/resolvelib/compat/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/resolvelib/__pycache__
-./venv/lib/python3.11/site-packages/pip/_vendor/resolvelib/__pycache__/reporters.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/resolvelib/__pycache__/resolvers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/resolvelib/__pycache__/providers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/resolvelib/__pycache__/structs.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/resolvelib/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/platformdirs/__pycache__
-./venv/lib/python3.11/site-packages/pip/_vendor/platformdirs/__pycache__/api.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/platformdirs/__pycache__/macos.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/platformdirs/__pycache__/version.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/_vendor/platformdirs/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/__pycache__
-./venv/lib/python3.11/site-packages/pip/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pip/__pycache__/__main__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sniffio/_tests/__pycache__
-./venv/lib/python3.11/site-packages/sniffio/_tests/__pycache__/test_sniffio.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sniffio/_tests/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sniffio/__pycache__
-./venv/lib/python3.11/site-packages/sniffio/__pycache__/_impl.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sniffio/__pycache__/_version.cpython-311.pyc
-./venv/lib/python3.11/site-packages/sniffio/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/middleware/__pycache__
-./venv/lib/python3.11/site-packages/fastapi/middleware/__pycache__/gzip.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/middleware/__pycache__/httpsredirect.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/middleware/__pycache__/cors.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/middleware/__pycache__/trustedhost.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/middleware/__pycache__/wsgi.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/middleware/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/security/__pycache__
-./venv/lib/python3.11/site-packages/fastapi/security/__pycache__/api_key.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/security/__pycache__/base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/security/__pycache__/utils.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/security/__pycache__/oauth2.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/security/__pycache__/open_id_connect_url.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/security/__pycache__/http.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/security/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/dependencies/__pycache__
-./venv/lib/python3.11/site-packages/fastapi/dependencies/__pycache__/utils.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/dependencies/__pycache__/models.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/dependencies/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/__pycache__
-./venv/lib/python3.11/site-packages/fastapi/__pycache__/exception_handlers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/__pycache__/routing.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/__pycache__/datastructures.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/__pycache__/_compat.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/__pycache__/testclient.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/__pycache__/logger.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/__pycache__/requests.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/__pycache__/staticfiles.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/__pycache__/background.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/__pycache__/utils.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/__pycache__/encoders.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/__pycache__/cli.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/__pycache__/responses.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/__pycache__/exceptions.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/__pycache__/params.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/__pycache__/types.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/__pycache__/param_functions.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/__pycache__/websockets.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/__pycache__/templating.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/__pycache__/concurrency.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/__pycache__/applications.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/__pycache__/__main__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/openapi/__pycache__
-./venv/lib/python3.11/site-packages/fastapi/openapi/__pycache__/docs.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/openapi/__pycache__/utils.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/openapi/__pycache__/models.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/openapi/__pycache__/constants.cpython-311.pyc
-./venv/lib/python3.11/site-packages/fastapi/openapi/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/middleware/__pycache__
-./venv/lib/python3.11/site-packages/uvicorn/middleware/__pycache__/asgi2.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/middleware/__pycache__/message_logger.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/middleware/__pycache__/proxy_headers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/middleware/__pycache__/wsgi.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/middleware/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/__pycache__
-./venv/lib/python3.11/site-packages/uvicorn/__pycache__/main.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/__pycache__/server.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/__pycache__/config.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/__pycache__/_types.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/__pycache__/logging.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/__pycache__/workers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/__pycache__/_subprocess.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/__pycache__/importer.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/__pycache__/__main__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/supervisors/__pycache__
-./venv/lib/python3.11/site-packages/uvicorn/supervisors/__pycache__/watchfilesreload.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/supervisors/__pycache__/multiprocess.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/supervisors/__pycache__/statreload.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/supervisors/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/supervisors/__pycache__/basereload.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/lifespan/__pycache__
-./venv/lib/python3.11/site-packages/uvicorn/lifespan/__pycache__/off.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/lifespan/__pycache__/on.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/lifespan/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/loops/__pycache__
-./venv/lib/python3.11/site-packages/uvicorn/loops/__pycache__/auto.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/loops/__pycache__/asyncio.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/loops/__pycache__/uvloop.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/loops/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/protocols/websockets/__pycache__
-./venv/lib/python3.11/site-packages/uvicorn/protocols/websockets/__pycache__/wsproto_impl.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/protocols/websockets/__pycache__/auto.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/protocols/websockets/__pycache__/websockets_impl.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/protocols/websockets/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/protocols/__pycache__
-./venv/lib/python3.11/site-packages/uvicorn/protocols/__pycache__/utils.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/protocols/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/protocols/http/__pycache__
-./venv/lib/python3.11/site-packages/uvicorn/protocols/http/__pycache__/flow_control.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/protocols/http/__pycache__/auto.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/protocols/http/__pycache__/h11_impl.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/protocols/http/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/uvicorn/protocols/http/__pycache__/httptools_impl.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/util/__pycache__
-./venv/lib/python3.11/site-packages/alembic/util/__pycache__/exc.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/util/__pycache__/langhelpers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/util/__pycache__/messaging.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/util/__pycache__/compat.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/util/__pycache__/pyfiles.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/util/__pycache__/editor.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/util/__pycache__/sqla_compat.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/util/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/ddl/__pycache__
-./venv/lib/python3.11/site-packages/alembic/ddl/__pycache__/postgresql.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/ddl/__pycache__/base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/ddl/__pycache__/impl.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/ddl/__pycache__/_autogen.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/ddl/__pycache__/sqlite.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/ddl/__pycache__/mysql.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/ddl/__pycache__/oracle.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/ddl/__pycache__/mssql.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/ddl/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/runtime/__pycache__
-./venv/lib/python3.11/site-packages/alembic/runtime/__pycache__/migration.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/runtime/__pycache__/environment.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/runtime/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/__pycache__
-./venv/lib/python3.11/site-packages/alembic/__pycache__/command.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/__pycache__/migration.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/__pycache__/config.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/__pycache__/op.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/__pycache__/environment.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/__pycache__/context.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/__pycache__/__main__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/operations/__pycache__
-./venv/lib/python3.11/site-packages/alembic/operations/__pycache__/base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/operations/__pycache__/batch.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/operations/__pycache__/ops.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/operations/__pycache__/schemaobj.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/operations/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/operations/__pycache__/toimpl.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/script/__pycache__
-./venv/lib/python3.11/site-packages/alembic/script/__pycache__/base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/script/__pycache__/write_hooks.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/script/__pycache__/revision.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/script/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/testing/plugin/__pycache__
-./venv/lib/python3.11/site-packages/alembic/testing/plugin/__pycache__/bootstrap.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/testing/plugin/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/testing/__pycache__
-./venv/lib/python3.11/site-packages/alembic/testing/__pycache__/requirements.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/testing/__pycache__/schemacompare.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/testing/__pycache__/fixtures.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/testing/__pycache__/assertions.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/testing/__pycache__/warnings.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/testing/__pycache__/env.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/testing/__pycache__/util.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/testing/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/testing/suite/__pycache__
-./venv/lib/python3.11/site-packages/alembic/testing/suite/__pycache__/test_autogen_computed.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/testing/suite/__pycache__/_autogen_fixtures.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/testing/suite/__pycache__/test_autogen_diffs.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/testing/suite/__pycache__/test_autogen_comments.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/testing/suite/__pycache__/test_autogen_identity.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/testing/suite/__pycache__/test_environment.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/testing/suite/__pycache__/test_autogen_fks.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/testing/suite/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/testing/suite/__pycache__/test_op.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/autogenerate/__pycache__
-./venv/lib/python3.11/site-packages/alembic/autogenerate/__pycache__/api.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/autogenerate/__pycache__/compare.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/autogenerate/__pycache__/rewriter.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/autogenerate/__pycache__/render.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/autogenerate/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/templates/async/__pycache__
-./venv/lib/python3.11/site-packages/alembic/templates/async/__pycache__/env.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/templates/multidb/__pycache__
-./venv/lib/python3.11/site-packages/alembic/templates/multidb/__pycache__/env.cpython-311.pyc
-./venv/lib/python3.11/site-packages/alembic/templates/generic/__pycache__
-./venv/lib/python3.11/site-packages/alembic/templates/generic/__pycache__/env.cpython-311.pyc
-./venv/lib/python3.11/site-packages/_distutils_hack/__pycache__
-./venv/lib/python3.11/site-packages/_distutils_hack/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/psycopg2/__pycache__
-./venv/lib/python3.11/site-packages/psycopg2/__pycache__/_ipaddress.cpython-311.pyc
-./venv/lib/python3.11/site-packages/psycopg2/__pycache__/extensions.cpython-311.pyc
-./venv/lib/python3.11/site-packages/psycopg2/__pycache__/sql.cpython-311.pyc
-./venv/lib/python3.11/site-packages/psycopg2/__pycache__/pool.cpython-311.pyc
-./venv/lib/python3.11/site-packages/psycopg2/__pycache__/errors.cpython-311.pyc
-./venv/lib/python3.11/site-packages/psycopg2/__pycache__/errorcodes.cpython-311.pyc
-./venv/lib/python3.11/site-packages/psycopg2/__pycache__/tz.cpython-311.pyc
-./venv/lib/python3.11/site-packages/psycopg2/__pycache__/_range.cpython-311.pyc
-./venv/lib/python3.11/site-packages/psycopg2/__pycache__/extras.cpython-311.pyc
-./venv/lib/python3.11/site-packages/psycopg2/__pycache__/_json.cpython-311.pyc
-./venv/lib/python3.11/site-packages/psycopg2/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/v1/__pycache__
-./venv/lib/python3.11/site-packages/pydantic/v1/__pycache__/validators.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/v1/__pycache__/color.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/v1/__pycache__/generics.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/v1/__pycache__/mypy.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/v1/__pycache__/networks.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/v1/__pycache__/typing.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/v1/__pycache__/main.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/v1/__pycache__/_hypothesis_plugin.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/v1/__pycache__/parse.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/v1/__pycache__/fields.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/v1/__pycache__/config.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/v1/__pycache__/datetime_parse.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/v1/__pycache__/schema.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/v1/__pycache__/utils.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/v1/__pycache__/errors.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/v1/__pycache__/dataclasses.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/v1/__pycache__/class_validators.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/v1/__pycache__/types.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/v1/__pycache__/json.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/v1/__pycache__/error_wrappers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/v1/__pycache__/env_settings.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/v1/__pycache__/tools.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/v1/__pycache__/decorator.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/v1/__pycache__/version.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/v1/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/v1/__pycache__/annotated_types.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_validators.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_forward_ref.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_validate_call.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_serializers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_typing_extra.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_fields.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_config.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_core_metadata.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_mock_val_ser.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_generate_schema.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_decorators.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_docs_extraction.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_generics.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_utils.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_import_utils.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_git.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_model_construction.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_repr.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_std_types_schema.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_core_utils.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_namespace_utils.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_discriminated_union.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_known_annotated_metadata.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_internal_dataclass.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_signature.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_decorators_v1.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_schema_generation_shared.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/_internal/__pycache__/_dataclasses.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/experimental/__pycache__
-./venv/lib/python3.11/site-packages/pydantic/experimental/__pycache__/pipeline.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/experimental/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/plugin/__pycache__
-./venv/lib/python3.11/site-packages/pydantic/plugin/__pycache__/_loader.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/plugin/__pycache__/_schema_validator.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/plugin/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/validators.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/color.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/root_model.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/generics.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/mypy.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/networks.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/functional_serializers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/typing.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/main.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/_migration.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/aliases.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/parse.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/fields.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/annotated_handlers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/validate_call_decorator.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/config.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/datetime_parse.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/schema.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/functional_validators.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/utils.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/errors.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/dataclasses.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/warnings.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/alias_generators.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/class_validators.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/type_adapter.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/types.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/json_schema.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/json.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/error_wrappers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/env_settings.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/tools.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/decorator.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/version.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/deprecated/__pycache__
-./venv/lib/python3.11/site-packages/pydantic/deprecated/__pycache__/parse.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/deprecated/__pycache__/config.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/deprecated/__pycache__/class_validators.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/deprecated/__pycache__/json.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/deprecated/__pycache__/tools.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/deprecated/__pycache__/decorator.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/deprecated/__pycache__/copy_internals.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic/deprecated/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/IN/__pycache__
-./venv/lib/python3.11/site-packages/dns/rdtypes/IN/__pycache__/A.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/IN/__pycache__/NAPTR.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/IN/__pycache__/DHCID.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/IN/__pycache__/AAAA.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/IN/__pycache__/KX.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/IN/__pycache__/PX.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/IN/__pycache__/SRV.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/IN/__pycache__/NSAP.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/IN/__pycache__/NSAP_PTR.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/IN/__pycache__/HTTPS.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/IN/__pycache__/SVCB.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/IN/__pycache__/IPSECKEY.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/IN/__pycache__/APL.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/IN/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/IN/__pycache__/WKS.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/CH/__pycache__
-./venv/lib/python3.11/site-packages/dns/rdtypes/CH/__pycache__/A.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/CH/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/__pycache__
-./venv/lib/python3.11/site-packages/dns/rdtypes/__pycache__/tlsabase.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/__pycache__/euibase.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/__pycache__/mxbase.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/__pycache__/dnskeybase.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/__pycache__/util.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/__pycache__/txtbase.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/__pycache__/svcbbase.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/__pycache__/nsbase.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/__pycache__/dsbase.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/SSHFP.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/CAA.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/RESINFO.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/URI.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/RRSIG.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/CSYNC.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/DLV.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/CERT.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/OPENPGPKEY.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/NSEC3PARAM.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/LOC.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/X25.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/DNAME.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/CDS.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/TXT.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/EUI48.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/RT.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/CDNSKEY.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/NSEC3.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/ZONEMD.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/AVC.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/AMTRELAY.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/EUI64.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/CNAME.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/AFSDB.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/LP.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/GPOS.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/TSIG.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/TKEY.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/TLSA.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/OPT.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/WALLET.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/NS.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/DNSKEY.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/SOA.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/PTR.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/HINFO.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/SMIMEA.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/L32.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/RP.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/SPF.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/ISDN.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/NSEC.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/HIP.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/MX.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/DS.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/NINFO.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/L64.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/NID.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/rdtypes/ANY/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/dnssecalgs/__pycache__
-./venv/lib/python3.11/site-packages/dns/dnssecalgs/__pycache__/eddsa.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/dnssecalgs/__pycache__/base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/dnssecalgs/__pycache__/rsa.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/dnssecalgs/__pycache__/ecdsa.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/dnssecalgs/__pycache__/cryptography.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/dnssecalgs/__pycache__/dsa.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/dnssecalgs/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__
-./venv/lib/python3.11/site-packages/dns/__pycache__/renderer.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/ipv4.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/resolver.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/zonefile.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/rdatatype.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/e164.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/tsigkeyring.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/exception.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/opcode.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/_immutable_ctx.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/_ddr.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/rcode.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/rdataset.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/message.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/update.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/namedict.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/ttl.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/_asyncio_backend.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/nameserver.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/wire.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/flags.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/edns.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/tokenizer.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/tsig.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/name.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/asyncresolver.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/set.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/immutable.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/reversename.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/xfr.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/versioned.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/_asyncbackend.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/grange.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/win32util.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/enum.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/serial.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/node.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/rrset.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/transaction.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/_features.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/_trio_backend.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/rdata.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/ipv6.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/zonetypes.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/inet.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/asyncbackend.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/zone.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/dnssec.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/query.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/rdataclass.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/entropy.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/dnssectypes.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/asyncquery.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/version.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/quic/__pycache__
-./venv/lib/python3.11/site-packages/dns/quic/__pycache__/_common.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/quic/__pycache__/_trio.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/quic/__pycache__/_sync.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/quic/__pycache__/_asyncio.cpython-311.pyc
-./venv/lib/python3.11/site-packages/dns/quic/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic_core/__pycache__
-./venv/lib/python3.11/site-packages/pydantic_core/__pycache__/core_schema.cpython-311.pyc
-./venv/lib/python3.11/site-packages/pydantic_core/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/email_validator/__pycache__
-./venv/lib/python3.11/site-packages/email_validator/__pycache__/validate_email.cpython-311.pyc
-./venv/lib/python3.11/site-packages/email_validator/__pycache__/exceptions_types.cpython-311.pyc
-./venv/lib/python3.11/site-packages/email_validator/__pycache__/syntax.cpython-311.pyc
-./venv/lib/python3.11/site-packages/email_validator/__pycache__/deliverability.cpython-311.pyc
-./venv/lib/python3.11/site-packages/email_validator/__pycache__/version.cpython-311.pyc
-./venv/lib/python3.11/site-packages/email_validator/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/email_validator/__pycache__/rfc_constants.cpython-311.pyc
-./venv/lib/python3.11/site-packages/email_validator/__pycache__/__main__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/crypto/_blowfish/__pycache__
-./venv/lib/python3.11/site-packages/passlib/crypto/_blowfish/__pycache__/base.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/crypto/_blowfish/__pycache__/unrolled.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/crypto/_blowfish/__pycache__/_gen_files.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/crypto/_blowfish/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/crypto/__pycache__
-./venv/lib/python3.11/site-packages/passlib/crypto/__pycache__/digest.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/crypto/__pycache__/des.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/crypto/__pycache__/_md4.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/crypto/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/crypto/scrypt/__pycache__
-./venv/lib/python3.11/site-packages/passlib/crypto/scrypt/__pycache__/_salsa.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/crypto/scrypt/__pycache__/_gen_files.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/crypto/scrypt/__pycache__/_builtin.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/crypto/scrypt/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/ext/__pycache__
-./venv/lib/python3.11/site-packages/passlib/ext/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/ext/django/__pycache__
-./venv/lib/python3.11/site-packages/passlib/ext/django/__pycache__/utils.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/ext/django/__pycache__/models.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/ext/django/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/_test_bad_register.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/test_totp.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/test_ext_django_source.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/test_handlers_argon2.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/test_ext_django.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/test_crypto_digest.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/test_context_deprecated.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/test_utils_md4.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/backports.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/test_pwd.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/test_apps.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/utils.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/test_crypto_builtin_md4.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/tox_support.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/test_handlers_django.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/test_registry.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/test_handlers_cisco.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/test_utils.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/test_win32.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/test_handlers_pbkdf2.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/test_crypto_des.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/test_utils_pbkdf2.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/test_context.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/test_utils_handlers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/test_handlers_bcrypt.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/test_apache.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/test_crypto_scrypt.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/test_hosts.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/test_handlers_scrypt.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/__main__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/tests/__pycache__/test_handlers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/utils/compat/__pycache__
-./venv/lib/python3.11/site-packages/passlib/utils/compat/__pycache__/_ordered_dict.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/utils/compat/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/utils/__pycache__
-./venv/lib/python3.11/site-packages/passlib/utils/__pycache__/handlers.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/utils/__pycache__/decor.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/utils/__pycache__/des.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/utils/__pycache__/binary.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/utils/__pycache__/pbkdf2.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/utils/__pycache__/md4.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/utils/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/__pycache__
-./venv/lib/python3.11/site-packages/passlib/__pycache__/exc.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/__pycache__/hosts.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/__pycache__/registry.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/__pycache__/hash.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/__pycache__/win32.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/__pycache__/context.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/__pycache__/totp.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/__pycache__/pwd.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/__pycache__/ifc.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/__pycache__/apache.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/__pycache__/apps.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/handlers/__pycache__
-./venv/lib/python3.11/site-packages/passlib/handlers/__pycache__/postgres.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/handlers/__pycache__/sha2_crypt.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/handlers/__pycache__/roundup.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/handlers/__pycache__/fshp.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/handlers/__pycache__/digests.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/handlers/__pycache__/md5_crypt.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/handlers/__pycache__/windows.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/handlers/__pycache__/scram.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/handlers/__pycache__/ldap_digests.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/handlers/__pycache__/argon2.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/handlers/__pycache__/phpass.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/handlers/__pycache__/misc.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/handlers/__pycache__/mysql.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/handlers/__pycache__/scrypt.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/handlers/__pycache__/cisco.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/handlers/__pycache__/bcrypt.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/handlers/__pycache__/sha1_crypt.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/handlers/__pycache__/sun_md5_crypt.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/handlers/__pycache__/des_crypt.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/handlers/__pycache__/pbkdf2.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/handlers/__pycache__/oracle.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/handlers/__pycache__/mssql.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/handlers/__pycache__/__init__.cpython-311.pyc
-./venv/lib/python3.11/site-packages/passlib/handlers/__pycache__/django.cpython-311.pyc
-./.idea
\ No newline at end of file
+🧪 Running tests to verify the testing setup...
+📝 Loading test environment variables...
+🗑️ Cleaning up old test database...
+🚀 Running tests...
+============================================================================================================= test session starts ==============================================================================================================
+platform darwin -- Python 3.11.1, pytest-8.3.3, pluggy-1.5.0 -- /Library/Frameworks/Python.framework/Versions/3.11/bin/python3.11
+cachedir: .pytest_cache
+rootdir: /Users/felipe/Documents/tl-showroom-backend-poc
+configfile: pytest.ini
+testpaths: tests
+plugins: dash-2.17.1, typeguard-2.13.3, anyio-4.6.2.post1
+collecting ... 
+collected 17 items                                                                                                                                                                                                                             
+
+tests/integration/test_routes.py::test_create_profile PASSED                                                                                                                                                                             [  5%]
+tests/integration/test_routes.py::test_get_profile PASSED                                                                                                                                                                                [ 11%]
+tests/integration/test_routes.py::test_get_profile_not_found PASSED                                                                                                                                                                      [ 17%]
+tests/integration/test_routes.py::test_get_profiles PASSED                                                                                                                                                                               [ 23%]
+tests/integration/test_routes.py::test_update_profile PASSED                                                                                                                                                                             [ 29%]
+tests/integration/test_routes.py::test_update_profile_not_found PASSED                                                                                                                                                                   [ 35%]
+tests/integration/test_routes.py::test_delete_profile PASSED                                                                                                                                                                             [ 41%]
+tests/integration/test_routes.py::test_delete_profile_not_found PASSED                                                                                                                                                                   [ 47%]
+tests/integration/test_routes.py::test_root_endpoint PASSED                                                                                                                                                                              [ 52%]
+tests/unit/test_crud.py::test_create_profile FAILED                                                                                                                                                                                      [ 58%]
+tests/unit/test_crud.py::test_get_profile FAILED                                                                                                                                                                                         [ 64%]
+tests/unit/test_crud.py::test_get_profiles FAILED                                                                                                                                                                                        [ 70%]
+tests/unit/test_crud.py::test_update_profile FAILED                                                                                                                                                                                      [ 76%]
+tests/unit/test_crud.py::test_delete_profile FAILED                                                                                                                                                                                      [ 82%]
+tests/unit/test_models.py::test_profile_model PASSED                                                                                                                                                                                     [ 88%]
+tests/unit/test_models.py::test_profile_history_model PASSED                                                                                                                                                                             [ 94%]
+tests/unit/test_models.py::test_profile_status_enum PASSED                                                                                                                                                                               [100%]
+
+=================================================================================================================== FAILURES ===================================================================================================================
+_____________________________________________________________________________________________________________ test_create_profile ______________________________________________________________________________________________________________
+
+db_session = <sqlalchemy.orm.session.Session object at 0x10c0ca990>
+
+    def test_create_profile(db_session):
+        """Test creating a profile using the ProfileApi."""
+        # Create profile data with unique email
+        import uuid
+    
+        unique_id = str(uuid.uuid4())
+        profile_data = ProfileCreate(
+            name="Test User",
+            email=f"test_crud_{unique_id}@example.com",
+            specialty="Testing",
+            linkedin=f"https://linkedin.com/in/testcrud_{unique_id}",
+        )
+    
+        # Create repository and controller
+        repository = ProfileRepositoryImpl(db_session)
+        profile_service = ProfileApi(repository)
+    
+        # Create profile
+>       profile = profile_service.create_profile(
+            name=profile_data.name,
+            email=profile_data.email,
+            specialty=profile_data.specialty,
+            linkedin=profile_data.linkedin
+        )
+
+tests/unit/test_crud.py:27: 
+_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
+
+self = <app.api.profile_api.ProfileApi object at 0x10c0fad50>, name = 'Test User', email = 'test_crud_34832d4f-90d9-4a95-9abf-235792ae03d2@example.com', specialty = 'Testing'
+linkedin = 'https://linkedin.com/in/testcrud_34832d4f-90d9-4a95-9abf-235792ae03d2'
+
+    def create_profile(
+        self, name: str, email: str, specialty: str, linkedin: Optional[str] = None
+    ) -> Profile:
+        """Create a new profile."""
+        # Use the service to create and persist the profile
+>       return self.profile_service.create_profile(name, email, specialty, linkedin)
+E       AttributeError: 'ProfileRepository' object has no attribute 'create_profile'
+
+app/api/profile_api.py:18: AttributeError
+_______________________________________________________________________________________________________________ test_get_profile _______________________________________________________________________________________________________________
+
+db_session = <sqlalchemy.orm.session.Session object at 0x10c166e50>, test_profile = <app.db.profile_models.Profile object at 0x10c167290>
+
+    def test_get_profile(db_session, test_profile):
+        """Test getting a profile by ID."""
+        # Create repository and controller
+        repository = ProfileRepositoryImpl(db_session)
+        profile_service = ProfileApi(repository)
+    
+        # Get the profile
+>       profile = profile_service.get_profile(test_profile.id)
+
+tests/unit/test_crud.py:57: 
+_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
+
+self = <app.api.profile_api.ProfileApi object at 0x10c167f50>, profile_id = 6
+
+    def get_profile(self, profile_id: int) -> Optional[Profile]:
+        """Get a profile by ID."""
+        # Use the service to get the profile
+>       return self.profile_service.get_profile(profile_id)
+E       AttributeError: 'ProfileRepository' object has no attribute 'get_profile'
+
+app/api/profile_api.py:23: AttributeError
+______________________________________________________________________________________________________________ test_get_profiles _______________________________________________________________________________________________________________
+
+db_session = <sqlalchemy.orm.session.Session object at 0x10a178d10>, test_profile = <app.db.profile_models.Profile object at 0x10a1781d0>
+
+    def test_get_profiles(db_session, test_profile):
+        """Test getting multiple profiles with pagination."""
+        # Create repository and controller
+        repository = ProfileRepositoryImpl(db_session)
+        profile_service = ProfileApi(repository)
+    
+        # Create another profile with unique email
+        profile_data = ProfileCreate(
+            name="Another User",
+            email=f"another_{test_profile.id}@example.com",
+            specialty="Another Specialty",
+            linkedin="https://linkedin.com/in/anotheruser",
+        )
+>       another_profile = profile_service.create_profile(
+            name=profile_data.name,
+            email=profile_data.email,
+            specialty=profile_data.specialty,
+            linkedin=profile_data.linkedin
+        )
+
+tests/unit/test_crud.py:79: 
+_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
+
+self = <app.api.profile_api.ProfileApi object at 0x10a178810>, name = 'Another User', email = 'another_7@example.com', specialty = 'Another Specialty', linkedin = 'https://linkedin.com/in/anotheruser'
+
+    def create_profile(
+        self, name: str, email: str, specialty: str, linkedin: Optional[str] = None
+    ) -> Profile:
+        """Create a new profile."""
+        # Use the service to create and persist the profile
+>       return self.profile_service.create_profile(name, email, specialty, linkedin)
+E       AttributeError: 'ProfileRepository' object has no attribute 'create_profile'
+
+app/api/profile_api.py:18: AttributeError
+_____________________________________________________________________________________________________________ test_update_profile ______________________________________________________________________________________________________________
+
+db_session = <sqlalchemy.orm.session.Session object at 0x10c149090>, test_profile = <app.db.profile_models.Profile object at 0x10c14b7d0>
+
+    def test_update_profile(db_session, test_profile):
+        """Test updating a profile."""
+        # Create repository and controller
+        repository = ProfileRepositoryImpl(db_session)
+        profile_service = ProfileApi(repository)
+    
+        # Update data
+        update_data = ProfileUpdate(name="Updated Name", status="INACTIVE")
+    
+        # Update profile
+>       updated_profile = profile_service.update_profile(
+            profile_id=test_profile.id,
+            name=update_data.name,
+            status=update_data.status
+        )
+
+tests/unit/test_crud.py:109: 
+_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
+
+self = <app.api.profile_api.ProfileApi object at 0x10c14b250>, profile_id = 8, name = 'Updated Name', email = None, specialty = None, linkedin = None, status = 'INACTIVE'
+
+    def update_profile(
+        self,
+        profile_id: int,
+        name: Optional[str] = None,
+        email: Optional[str] = None,
+        specialty: Optional[str] = None,
+        linkedin: Optional[str] = None,
+        status: Optional[str] = None,
+    ) -> Optional[Profile]:
+        """Update a profile."""
+>       profile = self.profile_service.get_profile(profile_id)
+E       AttributeError: 'ProfileRepository' object has no attribute 'get_profile'
+
+app/api/profile_api.py:40: AttributeError
+_____________________________________________________________________________________________________________ test_delete_profile ______________________________________________________________________________________________________________
+
+db_session = <sqlalchemy.orm.session.Session object at 0x10c16df10>, test_profile = <app.db.profile_models.Profile object at 0x10c16d850>
+
+    def test_delete_profile(db_session, test_profile):
+        """Test deleting a profile."""
+        # Create repository and controller
+        repository = ProfileRepositoryImpl(db_session)
+        profile_service = ProfileApi(repository)
+    
+        # Store profile ID before deletion
+        profile_id = test_profile.id
+    
+        # Delete profile
+>       deleted_profile = profile_service.delete_profile(profile_id)
+
+tests/unit/test_crud.py:138: 
+_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
+
+self = <app.api.profile_api.ProfileApi object at 0x10c16e750>, profile_id = 9
+
+    def delete_profile(self, profile_id: int) -> Optional[Profile]:
+        """Delete a profile."""
+        # Use the service to delete the profile
+>       return self.profile_service.delete_profile(profile_id)
+E       AttributeError: 'ProfileRepository' object has no attribute 'delete_profile'
+
+app/api/profile_api.py:72: AttributeError
+=============================================================================================================== warnings summary ===============================================================================================================
+app/config/database.py:20
+  /Users/felipe/Documents/tl-showroom-backend-poc/app/config/database.py:20: MovedIn20Warning: The ``declarative_base()`` function is now available as sqlalchemy.orm.declarative_base(). (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
+    Base = declarative_base()
+
+../../../../Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/_internal/_config.py:291
+  /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/_internal/_config.py:291: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.9/migration/
+    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)
+
+-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
+=========================================================================================================== short test summary info ============================================================================================================
+FAILED tests/unit/test_crud.py::test_create_profile - AttributeError: 'ProfileRepository' object has no attribute 'create_profile'
+FAILED tests/unit/test_crud.py::test_get_profile - AttributeError: 'ProfileRepository' object has no attribute 'get_profile'
+FAILED tests/unit/test_crud.py::test_get_profiles - AttributeError: 'ProfileRepository' object has no attribute 'create_profile'
+FAILED tests/unit/test_crud.py::test_update_profile - AttributeError: 'ProfileRepository' object has no attribute 'get_profile'
+FAILED tests/unit/test_crud.py::test_delete_profile - AttributeError: 'ProfileRepository' object has no attribute 'delete_profile'
+=================================================================================================== 5 failed, 12 passed, 2 warnings in 0.19s ===================================================================================================
+❌ Tests failed. Please check the error messages above.
\ No newline at end of file
diff --git a/Makefile b/Makefile
deleted file mode 100644
index b59ad90..0000000
--- a/Makefile
+++ /dev/null
@@ -1,34 +0,0 @@
-.PHONY: test test-coverage lint format install clean
-
-# Install dependencies
-install:
-	pip install -r requirements.txt
-
-# Run tests
-test:
-	pytest
-
-# Run tests with coverage report
-test-coverage:
-	pytest --cov=. --cov-report=html
-	@echo "Coverage report generated in htmlcov/ directory"
-
-# Run linting
-lint:
-	flake8 .
-
-# Format code
-format:
-	black .
-
-# Run tests in Docker
-test-docker:
-	docker-compose -f docker-compose.test.yml up --build
-
-# Clean up
-clean:
-	rm -rf .pytest_cache
-	rm -rf htmlcov
-	rm -rf .coverage
-	rm -f test.db
-	find . -type d -name __pycache__ -exec rm -rf {} +
\ No newline at end of file
diff --git a/README.md b/README.md
index 9caf75d..b733acf 100644
--- a/README.md
+++ b/README.md
@@ -1,7 +1,7 @@
 # TL Showroom Backend POC
 
 ## Project Overview
-This is a proof-of-concept (POC) backend for a showroom application, built with FastAPI and PostgreSQL. The application manages profiles with different statuses and tracks their lifecycle.
+This is a proof-of-concept (POC) backend for a showroom application, built with FastAPI and PostgreSQL. The application manages profiles with different statuses (ACTIVE, INACTIVE, SUSPENDED, DELETED) and tracks their lifecycle through a history of status changes. It provides a RESTful API for creating, reading, updating, and deleting profiles.
 
 ## Technology Stack
 - **FastAPI**: Modern, fast web framework for building APIs with Python
@@ -13,16 +13,69 @@ This is a proof-of-concept (POC) backend for a showroom application, built with
 - **Alembic**: Database migration tool
 
 ## Project Structure
-- **main.py**: Entry point of the application, configures FastAPI and middleware
-- **routes.py**: API route definitions for profile management
-- **crud.py**: Database operations (Create, Read, Update, Delete)
-- **models.py**: SQLAlchemy models defining the database schema
-- **schemas.py**: Pydantic models for request/response validation
-- **database.py**: Database connection setup
+- **main.py**: Entry point that imports the application from the app package
+- **app/**: Main application package
+  - **main.py**: Configures FastAPI and middleware
+  - **api/**: API-related modules
+    - **routes.py**: API route definitions for profile management
+    - **profile_api.py**: API interface for profile operations
+    - **profile_schemas.py**: Pydantic models for request/response validation
+  - **config/**: Configuration modules

+    - **database.py**: Database connection setup
+    - **dependencies.py**: FastAPI dependency injection setup
+  - **db/**: Database access layer
+    - **profile_repository.py**: Repository for profile data access
+  - **services/**: Business logic layer
+    - **profile_service.py**: Service implementing profile business logic
+  - **entities.py**: Domain entities (Profile, ProfileHistory, ProfileStatus)
+- **tests/**: Test suite
+  - **unit/**: Unit tests
+    - **test_models.py**: Tests for domain models
+    - **test_crud.py**: Tests for database operations
+  - **integration/**: Integration tests
+    - **test_routes.py**: Tests for API routes
 - **Dockerfile**: Instructions for building the Docker image
 - **docker-compose.yml**: Service definitions for the application and database
+- **docker-compose.test.yml**: Service definitions for running tests
 - **entrypoint.sh**: Script for starting the application with HTTPS
 - **deploy.sh**: Script for deploying the application to production
+- **.env.example**: Example environment variables
+- **.env.test**: Environment variables for testing
+- **run_tests.sh**: Script for running tests
+- **test-coverage.sh**: Script for generating test coverage reports
+- **test-docker.sh**: Script for running tests in Docker
+- **format.sh**: Script for formatting code
+- **lint.sh**: Script for linting code
+- **clean.sh**: Script for cleaning up temporary files
+
+## Architecture
+This project follows a layered architecture pattern:
+
+- **API Layer** (app/api): Handles HTTP requests and responses, input validation, and routing
+  - Routes define the API endpoints and delegate to the service layer
+  - Schemas define the data structures for request/response validation
+
+- **Service Layer** (app/services): Contains the business logic
+  - ProfileService implements the core business rules for profile management
+  - Services are independent of the HTTP layer and database implementation
+
+- **Data Access Layer** (app/db): Manages data persistence
+  - Repositories abstract the database operations
+  - Provides a clean interface for the service layer to interact with the database
+
+- **Domain Model** (app/entities.py): Defines the core business entities
+  - Profile, ProfileHistory, and ProfileStatus represent the domain concepts
+  - Contains business rules specific to the entities
+
+- **Configuration** (app/config): Manages application configuration and dependencies
+  - Database connection setup
+  - Dependency injection for FastAPI
+
+This architecture provides several benefits:
+- **Separation of Concerns**: Each layer has a specific responsibility
+- **Testability**: Components can be tested in isolation
+- **Maintainability**: Changes in one layer have minimal impact on other layers
+- **Scalability**: Layers can be scaled independently as needed
 
 ## Features
 - **Profile Management**: Create, read, update, and delete profiles
@@ -56,5 +109,122 @@ The application is designed to be deployed using Docker Compose. The deployment
    - DB_NAME
 3. Run `docker-compose up` to start the application and database
 
+## Testing Setup
+The project includes a comprehensive testing setup with unit tests and integration tests.
+
+### Prerequisites
+- Python 3.8 or higher
+- pip (Python package installer)
+
+### Setting Up the Testing Environment
+1. Install the required dependencies:
+   ```
+   pip install -r requirements.txt
+   ```
+
+2. Configure the testing environment (optional):
+   - Copy `.env.test` to create your own test configuration
+   - By default, tests use SQLite for simplicity
+   - You can configure PostgreSQL for testing by uncommenting and setting the appropriate variables in `.env.test`
+
+3. Run the tests:
+   ```
+   pytest
+   ```
+
+   Alternatively, you can use the provided script:
+   ```
+   ./run_tests.sh
+   ```
+
+   To install dependencies and run tests in one command:
+   ```
+   ./run_tests.sh --install
+   ```
+
+### Test Structure
+- **Unit Tests**: Tests for individual components (models, CRUD operations)
+  - `tests/unit/test_models.py`: Tests for SQLAlchemy models
+  - `tests/unit/test_crud.py`: Tests for database operations through the hexagonal architecture
+
+- **Integration Tests**: Tests for API endpoints
+  - `tests/integration/test_routes.py`: Tests for API routes
+
+### Running Specific Tests
+- Run all tests:
+  ```
+  pytest
+  ```
+
+- Run unit tests only:
+  ```
+  pytest tests/unit/
+  ```
+
+- Run integration tests only:
+  ```
+  pytest tests/integration/
+  ```
+
+- Run tests with coverage report:
+  ```
+  pytest --cov=. --cov-report=html
+  ```
+  This will generate an HTML coverage report in the `htmlcov` directory.
+
+### Running Tests with Docker
+You can also run tests in a containerized environment using Docker Compose:
+
+```
+docker-compose -f docker-compose.test.yml up
+```
+
+This will:
+1. Build the Docker image
+2. Install all dependencies
+3. Run all tests with coverage reporting
+4. Display the test results in the terminal
+
+This approach ensures that tests run in an environment similar to production and is especially useful for CI/CD pipelines.
+
+### Continuous Integration
+This project uses GitHub Actions for continuous integration. The workflow automatically runs tests on push to the main branch and on pull requests.
+
+The workflow:
+1. Sets up Python
+2. Installs dependencies
+3. Runs tests with coverage reporting
+4. Uploads coverage reports to Codecov
+
+You can see the workflow configuration in `.github/workflows/test.yml`.
+
+### Using the Shell Scripts
+This project includes shell scripts to simplify common development tasks:
+
+```
+# Install dependencies
+./install.sh
+
+# Run tests
+./run_tests.sh
+
+# Run tests with coverage report
+./test-coverage.sh
+
+# Run linting
+./lint.sh
+
+# Format code
+./format.sh
+
+# Run tests in Docker
+./test-docker.sh
+
+# Clean up temporary files
+./clean.sh
+```
+
+These shell scripts provide a convenient way to run common tasks and make it easier to integrate with CI/CD systems.
+
 ## Production Deployment
-For production deployment, the application uses HTTPS with Let's Encrypt certificates. The entrypoint.sh script configures Uvicorn to use SSL certificates for secure communication.
\ No newline at end of file
+For production deployment, the application uses HTTPS with Let's Encrypt certificates. The entrypoint.sh script configures Uvicorn to use SSL certificates for secure communication.
diff --git a/app/api/__init__.py b/app/api/__init__.py
index 38e5c89..a4f58ff 100644
--- a/app/api/__init__.py
+++ b/app/api/__init__.py
@@ -1 +1,3 @@
-# API module
\ No newline at end of file
+from app.api.profile_api import ProfileApi
+
+__all__ = ["ProfileApi"]
diff --git a/app/api/profile_controller.py b/app/api/profile_controller.py
deleted file mode 100644
index 83e372b..0000000
--- a/app/api/profile_controller.py
+++ /dev/null
@@ -1,99 +0,0 @@
-from typing import List, Optional, Dict, Any
-from app.core.domain.entities import Profile
-from app.core.domain.services import ProfileService
-from app.core.domain.interfaces.profile_repository import ProfileRepository
-from app.core.common import ProfileStatus
-from app.db.sqlalchemy_models import ProfileHistory as ProfileHistoryModel
-from sqlalchemy.orm import Session
-
-
-class ProfileController:
-    """Controller for profile-related API operations."""
-
-    def __init__(self, profile_repository: ProfileRepository):
-        self.profile_repository = profile_repository
-        self.profile_service = ProfileService()
-
-    def create_profile(
-        self, name: str, email: str, specialty: str, linkedin: Optional[str] = None
-    ) -> Profile:
-        """Create a new profile."""
-        profile = self.profile_service.create_profile(name, email, specialty, linkedin)
-        created_profile = self.profile_repository.create(profile)
-
-        # No need for status conversion since we're using a single ProfileStatus enum
-
-        return created_profile
-
-    def get_profile(self, profile_id: int) -> Optional[Profile]:
-        """Get a profile by ID."""
-        profile = self.profile_repository.get_by_id(profile_id)
-
-        # No need for status conversion since we're using a single ProfileStatus enum
-
-        return profile
-
-    def get_profiles(self, skip: int = 0, limit: int = 10) -> List[Profile]:
-        """Get all profiles with pagination."""
-        profiles = self.profile_repository.get_all(skip, limit)
-
-        # No need for status conversion since we're using a single ProfileStatus enum
-
-        return profiles
-
-    def update_profile(
-        self,
-        profile_id: int,
-        name: Optional[str] = None,
-        email: Optional[str] = None,
-        specialty: Optional[str] = None,
-        linkedin: Optional[str] = None,
-        status: Optional[str] = None,
-    ) -> Optional[Profile]:
-        """Update a profile."""
-        profile = self.profile_repository.get_by_id(profile_id)
-        if not profile:
-            return None
-
-        # Convert status string to enum if provided
-        status_enum = None
-        if status:
-            try:
-                # Handle both "inactive" and "INACTIVE" formats
-                if status.upper() == "INACTIVE":
-                    status_enum = ProfileStatus.INACTIVE
-                elif status.upper() == "ACTIVE":
-                    status_enum = ProfileStatus.ACTIVE
-                elif status.upper() == "SUSPENDED":
-                    status_enum = ProfileStatus.SUSPENDED
-                elif status.upper() == "DELETED":
-                    status_enum = ProfileStatus.DELETED
-                else:
-                    # Try direct conversion as fallback
-                    status_enum = ProfileStatus(status)
-            except ValueError:
-                # Invalid status value, ignore it
-                pass
-
-        updated_profile = self.profile_service.update_profile(
-            profile, name, email, specialty, linkedin, status_enum
-        )
-
-        # Update the profile in the repository
-        updated_profile = self.profile_repository.update(updated_profile)
-
-        return updated_profile
-
-    def delete_profile(self, profile_id: int) -> Optional[Profile]:
-        """Delete a profile."""
-        profile = self.profile_repository.get_by_id(profile_id)
-        if not profile:
-            return None
-
-        # Use the delete method of the repository instead of update
-        # This matches the behavior in the original crud.py
-        deleted_profile = self.profile_repository.delete(profile_id)
-
-        # No need for status conversion since we're using a single ProfileStatus enum
-
-        return deleted_profile
\ No newline at end of file
diff --git a/app/api/routes.py b/app/api/routes.py
index 29825d5..840da79 100644
--- a/app/api/routes.py
+++ b/app/api/routes.py
@@ -1,7 +1,7 @@
 from fastapi import APIRouter, Depends, HTTPException
-from app.api.profile_controller import ProfileController
-from app.api.schemas import ProfileCreate, ProfileUpdate, ProfileResponse
-from app.config.dependencies import get_profile_service
+from app.api.profile_api import ProfileApi
+from app.api.profile_schemas import ProfileCreate, ProfileUpdate, ProfileResponse
+from app.config.dependencies import get_profile_api
 from typing import List
 
 router = APIRouter()
@@ -9,7 +9,7 @@ router = APIRouter()
 
 # 🔹 Crear un nuevo perfil
 @router.post("/profiles/", response_model=ProfileResponse)
-def create_new_profile(profile: ProfileCreate, profile_service: ProfileController = Depends(get_profile_service)):
+def create_new_profile(profile: ProfileCreate, profile_service: ProfileApi = Depends(get_profile_api)):
     return profile_service.create_profile(
         name=profile.name,
         email=profile.email,
@@ -20,7 +20,7 @@ def create_new_profile(profile: ProfileCreate, profile_service: ProfileControlle
 
 # 🔹 Obtener un perfil por ID
 @router.get("/profiles/{profile_id}", response_model=ProfileResponse)
-def read_profile(profile_id: int, profile_service: ProfileController = Depends(get_profile_service)):
+def read_profile(profile_id: int, profile_service: ProfileApi = Depends(get_profile_api)):
     profile = profile_service.get_profile(profile_id)
     if not profile:
         raise HTTPException(status_code=404, detail="Perfil no encontrado")
@@ -29,13 +29,13 @@ def read_profile(profile_id: int, profile_service: ProfileController = Depends(g
 
 # 🔹 Obtener todos los perfiles
 @router.get("/profiles/", response_model=List[ProfileResponse])
-def read_profiles(skip: int = 0, limit: int = 10, profile_service: ProfileController = Depends(get_profile_service)):
+def read_profiles(skip: int = 0, limit: int = 10, profile_service: ProfileApi = Depends(get_profile_api)):
     return profile_service.get_profiles(skip, limit)
 
 
 # 🔹 Actualizar un perfil
 @router.put("/profiles/{profile_id}", response_model=ProfileResponse)
-def update_existing_profile(profile_id: int, profile: ProfileUpdate, profile_service: ProfileController = Depends(get_profile_service)):
+def update_existing_profile(profile_id: int, profile: ProfileUpdate, profile_service: ProfileApi = Depends(get_profile_api)):
     updated_profile = profile_service.update_profile(
         profile_id=profile_id,
         name=profile.name,
@@ -51,8 +51,8 @@ def update_existing_profile(profile_id: int, profile: ProfileUpdate, profile_ser
 
 # 🔹 Eliminar un perfil
 @router.delete("/profiles/{profile_id}")
-def delete_existing_profile(profile_id: int, profile_service: ProfileController = Depends(get_profile_service)):
+def delete_existing_profile(profile_id: int, profile_service: ProfileApi = Depends(get_profile_api)):
     deleted_profile = profile_service.delete_profile(profile_id)
     if not deleted_profile:
         raise HTTPException(status_code=404, detail="Perfil no encontrado")
-    return {"message": "Perfil eliminado"}
\ No newline at end of file
+    return {"message": "Perfil eliminado"}
diff --git a/app/api/schemas.py b/app/api/schemas.py
index ebce1b3..e69de29 100644
--- a/app/api/schemas.py
+++ b/app/api/schemas.py
@@ -1,31 +0,0 @@
-from pydantic import BaseModel, EmailStr
-from datetime import datetime
-from typing import Optional
-
-
-# 🔹 Esquema para crear un perfil
-class ProfileCreate(BaseModel):
-    name: str
-    email: EmailStr
-    specialty: str
-    linkedin: Optional[str] = None
-
-
-# 🔹 Esquema para actualizar un perfil
-class ProfileUpdate(BaseModel):
-    name: Optional[str] = None
-    email: Optional[EmailStr] = None
-    specialty: Optional[str] = None
-    linkedin: Optional[str] = None
-    status: Optional[str] = None
-
-
-# 🔹 Esquema para mostrar un perfil
-class ProfileResponse(ProfileCreate):
-    id: int
-    status: str
-    start_date: datetime
-    end_date: Optional[datetime] = None
-
-    class Config:
-        from_attributes = True
\ No newline at end of file
diff --git a/app/config/dependencies.py b/app/config/dependencies.py
index 62ac84e..23168c5 100644
--- a/app/config/dependencies.py
+++ b/app/config/dependencies.py
@@ -1,21 +1,28 @@
-from app.core.ports.output import ProfileRepository
-from app.core.adapters.output import SQLAlchemyProfileRepository
-from app.core.adapters.input import ProfileServiceAdapter
-from app.core import get_db
+from app.db.profile_repository import ProfileRepository as ProfileRepositoryImpl
+from app.api.profile_api import ProfileApi
+from app.services.profile_service import ProfileService
+from app.config.database import get_db
 from fastapi import Depends
 from typing import Any
 
-def get_profile_repository(db: Any) -> ProfileRepository:
+def get_profile_repository(db: Any) -> ProfileRepositoryImpl:
     """
-    Factory function that returns a ProfileRepository implementation.
+    Factory function that returns a profile repository implementation.
     This hides the SQLAlchemy dependency from the routes.
     """
-    return SQLAlchemyProfileRepository(db)
+    return ProfileRepositoryImpl(db)
 
-def get_profile_service(db: Any = Depends(get_db)) -> ProfileServiceAdapter:
+def get_profile_service(db: Any = Depends(get_db)) -> ProfileService:
     """
-    Factory function that returns a ProfileServiceAdapter.
-    This hides the database dependency from the routes.
+    Factory function that returns a ProfileService.
+    This hides the repository dependency from the API.
     """
     repository = get_profile_repository(db)
-    return ProfileServiceAdapter(repository)
\ No newline at end of file
+    return ProfileService(repository)
+
+def get_profile_api(profile_service: ProfileService = Depends(get_profile_service)) -> ProfileApi:
+    """
+    Factory function that returns a ProfileApi.
+    This hides the service dependency from the routes.
+    """
+    return ProfileApi(profile_service)
diff --git a/app/core/adapters/__init__.py b/app/core/adapters/__init__.py
deleted file mode 100644
index f52c058..0000000
--- a/app/core/adapters/__init__.py
+++ /dev/null
@@ -1,10 +0,0 @@
-from app.core.adapters.input import ProfileServiceAdapter
-from app.core.adapters.output import SQLAlchemyProfileRepository
-
-__all__ = [
-    # Input adapters
-    "ProfileServiceAdapter",
-    
-    # Output adapters
-    "SQLAlchemyProfileRepository"
-]
\ No newline at end of file
diff --git a/app/core/adapters/api/__init__.py b/app/core/adapters/api/__init__.py
deleted file mode 100644
index aa1bd94..0000000
--- a/app/core/adapters/api/__init__.py
+++ /dev/null
@@ -1,4 +0,0 @@
-from app.core.adapters.api.profile_service_adapter import ProfileServiceAdapter
-from app.core.adapters.api.routes import router
-
-__all__ = ["ProfileServiceAdapter", "router"]
\ No newline at end of file
diff --git a/app/core/adapters/api/profile_api.py b/app/core/adapters/api/profile_api.py
deleted file mode 100644
index 70bc3ae..0000000
--- a/app/core/adapters/api/profile_api.py
+++ /dev/null
@@ -1,74 +0,0 @@
-from typing import List, Optional
-from app.core.domain.entities import Profile
-from app.core.domain.services import ProfileService
-from app.core.domain import ProfileRepository
-from app.core.common import ProfileStatus
-
-
-class ProfileApi:
-    """API for profile-related operations."""
-
-    def __init__(self, profile_repository: ProfileRepository):
-        # Pass the repository to the service
-        self.profile_service = ProfileService(profile_repository)
-
-    def create_profile(
-        self, name: str, email: str, specialty: str, linkedin: Optional[str] = None
-    ) -> Profile:
-        """Create a new profile."""
-        # Use the service to create and persist the profile
-        return self.profile_service.create_profile(name, email, specialty, linkedin)
-
-    def get_profile(self, profile_id: int) -> Optional[Profile]:
-        """Get a profile by ID."""
-        # Use the service to get the profile
-        return self.profile_service.get_profile(profile_id)
-
-    def get_profiles(self, skip: int = 0, limit: int = 10) -> List[Profile]:
-        """Get all profiles with pagination."""
-        # Use the service to get all profiles
-        return self.profile_service.get_profiles(skip, limit)
-
-    def update_profile(
-        self,
-        profile_id: int,
-        name: Optional[str] = None,
-        email: Optional[str] = None,
-        specialty: Optional[str] = None,
-        linkedin: Optional[str] = None,
-        status: Optional[str] = None,
-    ) -> Optional[Profile]:
-        """Update a profile."""
-        profile = self.profile_service.get_profile(profile_id)
-        if not profile:
-            return None
-
-        # Convert status string to enum if provided
-        status_enum = None
-        if status:
-            try:
-                # Handle both "inactive" and "INACTIVE" formats
-                if status.upper() == "INACTIVE":
-                    status_enum = ProfileStatus.INACTIVE
-                elif status.upper() == "ACTIVE":
-                    status_enum = ProfileStatus.ACTIVE
-                elif status.upper() == "SUSPENDED":
-                    status_enum = ProfileStatus.SUSPENDED
-                elif status.upper() == "DELETED":
-                    status_enum = ProfileStatus.DELETED
-                else:
-                    # Try direct conversion as fallback
-                    status_enum = ProfileStatus(status)
-            except ValueError:
-                # Invalid status value, ignore it
-                pass
-
-        # Use the service to update the profile
-        return self.profile_service.update_profile(
-            profile, name, email, specialty, linkedin, status_enum
-        )
-
-    def delete_profile(self, profile_id: int) -> Optional[Profile]:
-        """Delete a profile."""
-        # Use the service to delete the profile
-        return self.profile_service.delete_profile(profile_id)
\ No newline at end of file
diff --git a/app/core/adapters/api/profile_controller.py b/app/core/adapters/api/profile_controller.py
deleted file mode 100644
index 45834bc..0000000
--- a/app/core/adapters/api/profile_controller.py
+++ /dev/null
@@ -1,93 +0,0 @@
-from typing import List, Optional, Dict, Any
-from app.core.domain.entities import Profile
-from app.core.domain.services import ProfileService
-from app.core.adapters.db.sqlalchemy_repository import SQLAlchemyProfileRepository
-from app.core.common import ProfileStatus
-from app.core.adapters.db.sqlalchemy_models import ProfileHistory as ProfileHistoryModel
-from sqlalchemy.orm import Session
-
-
-class ProfileController:
-    """Controller for profile-related API operations."""
-
-    def __init__(self, profile_repository: SQLAlchemyProfileRepository):
-        self.profile_repository = profile_repository
-        self.profile_service = ProfileService()
-
-    def create_profile(
-        self, name: str, email: str, specialty: str, linkedin: Optional[str] = None
-    ) -> Profile:
-        """Create a new profile."""
-        profile = self.profile_service.create_profile(name, email, specialty, linkedin)
-        created_profile = self.profile_repository.create(profile)
-
-        # No need for status conversion since we're using a single ProfileStatus enum
-
-        return created_profile
-
-    def get_profile(self, profile_id: int) -> Optional[Profile]:
-        """Get a profile by ID."""
-        profile = self.profile_repository.get_by_id(profile_id)
-
-        # No need for status conversion since we're using a single ProfileStatus enum
-
-        return profile
-
-    def get_profiles(self, skip: int = 0, limit: int = 10) -> List[Profile]:
-        """Get all profiles with pagination."""
-        profiles = self.profile_repository.get_all(skip, limit)
-
-        # No need for status conversion since we're using a single ProfileStatus enum
-
-        return profiles
-
-    def update_profile(
-        self,
-        profile_id: int,
-        name: Optional[str] = None,
-        email: Optional[str] = None,
-        specialty: Optional[str] = None,
-        linkedin: Optional[str] = None,
-        status: Optional[str] = None,
-    ) -> Optional[Profile]:
-        """Update a profile."""
-        profile = self.profile_repository.get_by_id(profile_id)
-        if not profile:
-            return None
-
-        # Convert status string to enum if provided
-        status_enum = None
-        if status:
-            try:
-                status_enum = ProfileStatus(status)
-            except ValueError:
-                # Invalid status value, ignore it
-                pass
-
-        updated_profile = self.profile_service.update_profile(
-            profile, name, email, specialty, linkedin, status_enum
-        )
-
-        # Update the profile in the repository
-        updated_profile = self.profile_repository.update(updated_profile)
-
-        # No need for status conversion since we're using a single ProfileStatus enum
-        # Just ensure the status is set correctly if it was explicitly set to INACTIVE
-        if status == "INACTIVE" and isinstance(updated_profile, dict):
-            updated_profile["status"] = ProfileStatus.INACTIVE.value
-
-        return updated_profile
-
-    def delete_profile(self, profile_id: int) -> Optional[Profile]:
-        """Delete a profile."""
-        profile = self.profile_repository.get_by_id(profile_id)
-        if not profile:
-            return None
-
-        # Use the delete method of the repository instead of update
-        # This matches the behavior in the original crud.py
-        deleted_profile = self.profile_repository.delete(profile_id)
-
-        # No need for status conversion since we're using a single ProfileStatus enum
-
-        return deleted_profile
\ No newline at end of file
diff --git a/app/core/adapters/api/profile_schemas.py b/app/core/adapters/api/profile_schemas.py
deleted file mode 100644
index ebce1b3..0000000
--- a/app/core/adapters/api/profile_schemas.py
+++ /dev/null
@@ -1,31 +0,0 @@
-from pydantic import BaseModel, EmailStr
-from datetime import datetime
-from typing import Optional
-
-
-# 🔹 Esquema para crear un perfil
-class ProfileCreate(BaseModel):
-    name: str
-    email: EmailStr
-    specialty: str
-    linkedin: Optional[str] = None
-
-
-# 🔹 Esquema para actualizar un perfil
-class ProfileUpdate(BaseModel):
-    name: Optional[str] = None
-    email: Optional[EmailStr] = None
-    specialty: Optional[str] = None
-    linkedin: Optional[str] = None
-    status: Optional[str] = None
-
-
-# 🔹 Esquema para mostrar un perfil
-class ProfileResponse(ProfileCreate):
-    id: int
-    status: str
-    start_date: datetime
-    end_date: Optional[datetime] = None
-
-    class Config:
-        from_attributes = True
\ No newline at end of file
diff --git a/app/core/adapters/api/profile_service.py b/app/core/adapters/api/profile_service.py
deleted file mode 100644
index 5873036..0000000
--- a/app/core/adapters/api/profile_service.py
+++ /dev/null
@@ -1,93 +0,0 @@
-from typing import List, Optional, Dict, Any
-from app.core.domain.entities import Profile
-from app.core.domain.services import ProfileService
-from app.core.adapters.db.sqlalchemy_repository import SQLAlchemyProfileRepository
-from app.core.common import ProfileStatus
-from app.core.adapters.db.sqlalchemy_models import ProfileHistory as ProfileHistoryModel
-from sqlalchemy.orm import Session
-
-
-class ProfileService:
-    """Service for profile-related operations."""
-
-    def __init__(self, profile_repository: SQLAlchemyProfileRepository):
-        self.profile_repository = profile_repository
-        self.profile_service = ProfileService()
-
-    def create_profile(
-        self, name: str, email: str, specialty: str, linkedin: Optional[str] = None
-    ) -> Profile:
-        """Create a new profile."""
-        profile = self.profile_service.create_profile(name, email, specialty, linkedin)
-        created_profile = self.profile_repository.create(profile)
-
-        # No need for status conversion since we're using a single ProfileStatus enum
-
-        return created_profile
-
-    def get_profile(self, profile_id: int) -> Optional[Profile]:
-        """Get a profile by ID."""
-        profile = self.profile_repository.get_by_id(profile_id)
-
-        # No need for status conversion since we're using a single ProfileStatus enum
-
-        return profile
-
-    def get_profiles(self, skip: int = 0, limit: int = 10) -> List[Profile]:
-        """Get all profiles with pagination."""
-        profiles = self.profile_repository.get_all(skip, limit)
-
-        # No need for status conversion since we're using a single ProfileStatus enum
-
-        return profiles
-
-    def update_profile(
-        self,
-        profile_id: int,
-        name: Optional[str] = None,
-        email: Optional[str] = None,
-        specialty: Optional[str] = None,
-        linkedin: Optional[str] = None,
-        status: Optional[str] = None,
-    ) -> Optional[Profile]:
-        """Update a profile."""
-        profile = self.profile_repository.get_by_id(profile_id)
-        if not profile:
-            return None
-
-        # Convert status string to enum if provided
-        status_enum = None
-        if status:
-            try:
-                status_enum = ProfileStatus(status)
-            except ValueError:
-                # Invalid status value, ignore it
-                pass
-
-        updated_profile = self.profile_service.update_profile(
-            profile, name, email, specialty, linkedin, status_enum
-        )
-
-        # Update the profile in the repository
-        updated_profile = self.profile_repository.update(updated_profile)
-
-        # No need for status conversion since we're using a single ProfileStatus enum
-        # Just ensure the status is set correctly if it was explicitly set to INACTIVE
-        if status == "INACTIVE" and isinstance(updated_profile, dict):
-            updated_profile["status"] = ProfileStatus.INACTIVE.value
-
-        return updated_profile
-
-    def delete_profile(self, profile_id: int) -> Optional[Profile]:
-        """Delete a profile."""
-        profile = self.profile_repository.get_by_id(profile_id)
-        if not profile:
-            return None
-
-        # Use the delete method of the repository instead of update
-        # This matches the behavior in the original crud.py
-        deleted_profile = self.profile_repository.delete(profile_id)
-
-        # No need for status conversion since we're using a single ProfileStatus enum
-
-        return deleted_profile
\ No newline at end of file
diff --git a/app/core/adapters/api/profile_service_adapter.py b/app/core/adapters/api/profile_service_adapter.py
deleted file mode 100644
index 7d775bd..0000000
--- a/app/core/adapters/api/profile_service_adapter.py
+++ /dev/null
@@ -1,94 +0,0 @@
-from typing import List, Optional, Dict, Any
-from app.core.domain.entities import Profile
-from app.core.domain.services import ProfileService
-from app.core.ports.input import ProfileUseCases
-from app.core.ports.output import ProfileRepository
-from app.core.common import ProfileStatus
-from app.core.adapters.db.sqlalchemy_models import ProfileHistory as ProfileHistoryModel
-from sqlalchemy.orm import Session
-
-
-class ProfileServiceAdapter(ProfileUseCases):
-    """Input adapter implementing the ProfileUseCases interface."""
-
-    def __init__(self, profile_repository: ProfileRepository):
-        self.profile_repository = profile_repository
-        self.profile_service = ProfileService()
-
-    def create_profile(
-        self, name: str, email: str, specialty: str, linkedin: Optional[str] = None
-    ) -> Profile:
-        """Create a new profile."""
-        profile = self.profile_service.create_profile(name, email, specialty, linkedin)
-        created_profile = self.profile_repository.create(profile)
-
-        # No need for status conversion since we're using a single ProfileStatus enum
-
-        return created_profile
-
-    def get_profile(self, profile_id: int) -> Optional[Profile]:
-        """Get a profile by ID."""
-        profile = self.profile_repository.get_by_id(profile_id)
-
-        # No need for status conversion since we're using a single ProfileStatus enum
-
-        return profile
-
-    def get_profiles(self, skip: int = 0, limit: int = 10) -> List[Profile]:
-        """Get all profiles with pagination."""
-        profiles = self.profile_repository.get_all(skip, limit)
-
-        # No need for status conversion since we're using a single ProfileStatus enum
-
-        return profiles
-
-    def update_profile(
-        self,
-        profile_id: int,
-        name: Optional[str] = None,
-        email: Optional[str] = None,
-        specialty: Optional[str] = None,
-        linkedin: Optional[str] = None,
-        status: Optional[str] = None,
-    ) -> Optional[Profile]:
-        """Update a profile."""
-        profile = self.profile_repository.get_by_id(profile_id)
-        if not profile:
-            return None
-
-        # Convert status string to enum if provided
-        status_enum = None
-        if status:
-            try:
-                status_enum = ProfileStatus(status)
-            except ValueError:
-                # Invalid status value, ignore it
-                pass
-
-        updated_profile = self.profile_service.update_profile(
-            profile, name, email, specialty, linkedin, status_enum
-        )
-
-        # Update the profile in the repository
-        updated_profile = self.profile_repository.update(updated_profile)
-
-        # No need for status conversion since we're using a single ProfileStatus enum
-        # Just ensure the status is set correctly if it was explicitly set to INACTIVE
-        if status == "INACTIVE" and isinstance(updated_profile, dict):
-            updated_profile["status"] = ProfileStatus.INACTIVE.value
-
-        return updated_profile
-
-    def delete_profile(self, profile_id: int) -> Optional[Profile]:
-        """Delete a profile."""
-        profile = self.profile_repository.get_by_id(profile_id)
-        if not profile:
-            return None
-
-        # Use the delete method of the repository instead of update
-        # This matches the behavior in the original crud.py
-        deleted_profile = self.profile_repository.delete(profile_id)
-
-        # No need for status conversion since we're using a single ProfileStatus enum
-
-        return deleted_profile
\ No newline at end of file
diff --git a/app/core/adapters/api/routes.py b/app/core/adapters/api/routes.py
deleted file mode 100644
index 0089e71..0000000
--- a/app/core/adapters/api/routes.py
+++ /dev/null
@@ -1,58 +0,0 @@
-from fastapi import APIRouter, Depends, HTTPException
-from app.core.adapters.api import ProfileServiceAdapter
-from app.core.adapters.api.schemas import ProfileCreate, ProfileUpdate, ProfileResponse
-from app.config.dependencies import get_profile_service
-from typing import List
-
-router = APIRouter()
-
-
-# 🔹 Crear un nuevo perfil
-@router.post("/profiles/", response_model=ProfileResponse)
-def create_new_profile(profile: ProfileCreate, profile_service: ProfileServiceAdapter = Depends(get_profile_service)):
-    return profile_service.create_profile(
-        name=profile.name,
-        email=profile.email,
-        specialty=profile.specialty,
-        linkedin=profile.linkedin,
-    )
-
-
-# 🔹 Obtener un perfil por ID
-@router.get("/profiles/{profile_id}", response_model=ProfileResponse)
-def read_profile(profile_id: int, profile_service: ProfileServiceAdapter = Depends(get_profile_service)):
-    profile = profile_service.get_profile(profile_id)
-    if not profile:
-        raise HTTPException(status_code=404, detail="Perfil no encontrado")
-    return profile
-
-
-# 🔹 Obtener todos los perfiles
-@router.get("/profiles/", response_model=List[ProfileResponse])
-def read_profiles(skip: int = 0, limit: int = 10, profile_service: ProfileServiceAdapter = Depends(get_profile_service)):
-    return profile_service.get_profiles(skip, limit)
-
-
-# 🔹 Actualizar un perfil
-@router.put("/profiles/{profile_id}", response_model=ProfileResponse)
-def update_existing_profile(profile_id: int, profile: ProfileUpdate, profile_service: ProfileServiceAdapter = Depends(get_profile_service)):
-    updated_profile = profile_service.update_profile(
-        profile_id=profile_id,
-        name=profile.name,
-        email=profile.email,
-        specialty=profile.specialty,
-        linkedin=profile.linkedin,
-        status=profile.status,
-    )
-    if not updated_profile:
-        raise HTTPException(status_code=404, detail="Perfil no encontrado")
-    return updated_profile
-
-
-# 🔹 Eliminar un perfil
-@router.delete("/profiles/{profile_id}")
-def delete_existing_profile(profile_id: int, profile_service: ProfileServiceAdapter = Depends(get_profile_service)):
-    deleted_profile = profile_service.delete_profile(profile_id)
-    if not deleted_profile:
-        raise HTTPException(status_code=404, detail="Perfil no encontrado")
-    return {"message": "Perfil eliminado"}
\ No newline at end of file
diff --git a/app/core/adapters/api/schemas.py b/app/core/adapters/api/schemas.py
deleted file mode 100644
index ebce1b3..0000000
--- a/app/core/adapters/api/schemas.py
+++ /dev/null
@@ -1,31 +0,0 @@
-from pydantic import BaseModel, EmailStr
-from datetime import datetime
-from typing import Optional
-
-
-# 🔹 Esquema para crear un perfil
-class ProfileCreate(BaseModel):
-    name: str
-    email: EmailStr
-    specialty: str
-    linkedin: Optional[str] = None
-
-
-# 🔹 Esquema para actualizar un perfil
-class ProfileUpdate(BaseModel):
-    name: Optional[str] = None
-    email: Optional[EmailStr] = None
-    specialty: Optional[str] = None
-    linkedin: Optional[str] = None
-    status: Optional[str] = None
-
-
-# 🔹 Esquema para mostrar un perfil
-class ProfileResponse(ProfileCreate):
-    id: int
-    status: str
-    start_date: datetime
-    end_date: Optional[datetime] = None
-
-    class Config:
-        from_attributes = True
\ No newline at end of file
diff --git a/app/core/adapters/db/__init__.py b/app/core/adapters/db/__init__.py
deleted file mode 100644
index 3b7924d..0000000
--- a/app/core/adapters/db/__init__.py
+++ /dev/null
@@ -1,3 +0,0 @@
-from app.core.adapters.db.sqlalchemy_repository import SQLAlchemyProfileRepository
-
-__all__ = ["SQLAlchemyProfileRepository"]
\ No newline at end of file
diff --git a/app/core/adapters/db/profile_models.py b/app/core/adapters/db/profile_models.py
deleted file mode 100644
index 5676c02..0000000
--- a/app/core/adapters/db/profile_models.py
+++ /dev/null
@@ -1,35 +0,0 @@
-from datetime import datetime
-from sqlalchemy import Column, Integer, String, ForeignKey, Enum, DateTime
-from sqlalchemy.orm import relationship
-from app.config.database import Base
-from app.core.common import ProfileStatus
-
-
-# 🔹 Modelo principal de perfiles
-class Profile(Base):
-    __tablename__ = "profiles"
-
-    id = Column(Integer, primary_key=True, index=True)
-    name = Column(String, nullable=False)
-    email = Column(String, unique=True, nullable=False)
-    specialty = Column(String, nullable=False)
-    linkedin = Column(String, nullable=True)
-    status = Column(Enum(ProfileStatus), default=ProfileStatus.ACTIVE, nullable=False)
-    start_date = Column(DateTime, default=datetime.utcnow, nullable=False)
-    end_date = Column(DateTime, nullable=True)
-
-    # Relación con el historial de estados
-    history = relationship("ProfileHistory", back_populates="profile", cascade="all, delete-orphan")
-
-
-# 🔹 Historial de estados del perfil
-class ProfileHistory(Base):
-    __tablename__ = "profile_history"
-
-    id = Column(Integer, primary_key=True, index=True)
-    profile_id = Column(Integer, ForeignKey("profiles.id"), nullable=False)
-    status = Column(Enum(ProfileStatus), nullable=False)
-    changed_at = Column(DateTime, default=datetime.utcnow, nullable=False)
-
-    # Relación inversa con Profile
-    profile = relationship("Profile", back_populates="history")
\ No newline at end of file
diff --git a/app/core/adapters/db/profile_repository.py b/app/core/adapters/db/profile_repository.py
deleted file mode 100644
index d8063a8..0000000
--- a/app/core/adapters/db/profile_repository.py
+++ /dev/null
@@ -1,149 +0,0 @@
-from typing import List, Optional
-from datetime import datetime
-from sqlalchemy.orm import Session
-from app.core.domain.entities import Profile, ProfileHistory, ProfileStatus
-from app.core.adapters.db.sqlalchemy_models import Profile as ProfileModel
-from app.core.adapters.db.sqlalchemy_models import ProfileHistory as ProfileHistoryModel
-from app.core.adapters.db.sqlalchemy_models import ProfileStatus as ProfileStatusModel
-
-
-class ProfileRepository:
-    """Repository for profile-related database operations."""
-
-    def __init__(self, db: Session):
-        self.db = db
-
-    def _map_to_domain(self, model: ProfileModel) -> Profile:
-        """Map a database model to a domain entity."""
-        profile = Profile(
-            id=model.id,
-            name=model.name,
-            email=model.email,
-            specialty=model.specialty,
-            linkedin=model.linkedin,
-            status=ProfileStatus(model.status.value),
-            start_date=model.start_date,
-            end_date=model.end_date,
-        )
-
-        # Map history entries
-        profile.history = [
-            ProfileHistory(
-                id=history.id,
-                profile_id=history.profile_id,
-                status=ProfileStatus(history.status.value),
-                changed_at=history.changed_at,
-                profile=profile,
-            )
-            for history in model.history
-        ]
-
-        return profile
-
-    def _map_to_model(self, entity: Profile) -> ProfileModel:
-        """Map a domain entity to a database model."""
-        # If entity has an ID, it might already exist in the database
-        if entity.id:
-            model = self.db.query(ProfileModel).filter(ProfileModel.id == entity.id).first()
-            if model:
-                # Update existing model
-                model.name = entity.name
-                model.email = entity.email
-                model.specialty = entity.specialty
-                model.linkedin = entity.linkedin
-                model.status = ProfileStatusModel(entity.status.value)
-                model.start_date = entity.start_date
-                model.end_date = entity.end_date
-                return model
-
-        # Create new model
-        model = ProfileModel(
-            id=entity.id,
-            name=entity.name,
-            email=entity.email,
-            specialty=entity.specialty,
-            linkedin=entity.linkedin,
-            status=ProfileStatusModel(entity.status.value),
-            start_date=entity.start_date,
-            end_date=entity.end_date,
-        )
-
-        return model
-
-    def create(self, profile: Profile) -> Profile:
-        """Create a new profile."""
-        model = self._map_to_model(profile)
-        self.db.add(model)
-        self.db.commit()
-        self.db.refresh(model)
-
-        # Set the ID from the database
-        profile.id = model.id
-
-        # Create history entry
-        history_model = ProfileHistoryModel(
-            profile_id=model.id, status=ProfileStatusModel(profile.status.value)
-        )
-        self.db.add(history_model)
-        self.db.commit()
-
-        return self._map_to_domain(model)
-
-    def get_by_id(self, profile_id: int) -> Optional[Profile]:
-        """Get a profile by ID."""
-        model = self.db.query(ProfileModel).filter(ProfileModel.id == profile_id).first()
-        if not model:
-            return None
-        return self._map_to_domain(model)
-
-    def get_all(self, skip: int = 0, limit: int = 10) -> List[Profile]:
-        """Get all profiles with pagination."""
-        models = self.db.query(ProfileModel).offset(skip).limit(limit).all()
-        return [self._map_to_domain(model) for model in models]
-
-    def update(self, profile: Profile) -> Profile:
-        """Update a profile."""
-        # Get the existing model
-        model = self.db.query(ProfileModel).filter(ProfileModel.id == profile.id).first()
-        if not model:
-            return None
-
-        # Update model fields
-        model.name = profile.name
-        model.email = profile.email
-        model.specialty = profile.specialty
-        model.linkedin = profile.linkedin
-        model.status = ProfileStatusModel(profile.status.value)
-        model.start_date = profile.start_date
-        model.end_date = profile.end_date
-
-        # Commit changes
-        self.db.commit()
-        self.db.refresh(model)
-
-        # Create history entry for status changes
-        # This matches the behavior in the original crud.py
-        history_model = ProfileHistoryModel(
-            profile_id=model.id, status=ProfileStatusModel(profile.status.value)
-        )
-        self.db.add(history_model)
-        self.db.commit()
-        self.db.refresh(model)
-
-        return self._map_to_domain(model)
-
-    def delete(self, profile_id: int) -> Optional[Profile]:
-        """Delete a profile."""
-        model = self.db.query(ProfileModel).filter(ProfileModel.id == profile_id).first()
-        if not model:
-            return None
-
-        # Map to domain entity before deletion
-        profile = self._map_to_domain(model)
-
-        # Actually delete the profile from the database
-        # This matches the behavior in the original crud.py
-        self.db.delete(model)
-        self.db.commit()
-
-        return profile
\ No newline at end of file
diff --git a/app/core/adapters/db/sqlalchemy_models.py b/app/core/adapters/db/sqlalchemy_models.py
deleted file mode 100644
index 5676c02..0000000
--- a/app/core/adapters/db/sqlalchemy_models.py
+++ /dev/null
@@ -1,35 +0,0 @@
-from datetime import datetime
-from sqlalchemy import Column, Integer, String, ForeignKey, Enum, DateTime
-from sqlalchemy.orm import relationship
-from app.config.database import Base
-from app.core.common import ProfileStatus
-
-
-# 🔹 Modelo principal de perfiles
-class Profile(Base):
-    __tablename__ = "profiles"
-
-    id = Column(Integer, primary_key=True, index=True)
-    name = Column(String, nullable=False)
-    email = Column(String, unique=True, nullable=False)
-    specialty = Column(String, nullable=False)
-    linkedin = Column(String, nullable=True)
-    status = Column(Enum(ProfileStatus), default=ProfileStatus.ACTIVE, nullable=False)
-    start_date = Column(DateTime, default=datetime.utcnow, nullable=False)
-    end_date = Column(DateTime, nullable=True)
-
-    # Relación con el historial de estados
-    history = relationship("ProfileHistory", back_populates="profile", cascade="all, delete-orphan")
-
-
-# 🔹 Historial de estados del perfil
-class ProfileHistory(Base):
-    __tablename__ = "profile_history"
-
-    id = Column(Integer, primary_key=True, index=True)
-    profile_id = Column(Integer, ForeignKey("profiles.id"), nullable=False)
-    status = Column(Enum(ProfileStatus), nullable=False)
-    changed_at = Column(DateTime, default=datetime.utcnow, nullable=False)
-
-    # Relación inversa con Profile
-    profile = relationship("Profile", back_populates="history")
\ No newline at end of file
diff --git a/app/core/adapters/db/sqlalchemy_repository.py b/app/core/adapters/db/sqlalchemy_repository.py
deleted file mode 100644
index d3fc871..0000000
--- a/app/core/adapters/db/sqlalchemy_repository.py
+++ /dev/null
@@ -1,150 +0,0 @@
-from typing import List, Optional
-from datetime import datetime
-from sqlalchemy.orm import Session
-from app.core.domain.entities import Profile, ProfileHistory, ProfileStatus
-from app.core.ports.output import ProfileRepository
-from app.core.adapters.db.sqlalchemy_models import Profile as ProfileModel
-from app.core.adapters.db.sqlalchemy_models import ProfileHistory as ProfileHistoryModel
-from app.core.adapters.db.sqlalchemy_models import ProfileStatus as ProfileStatusModel
-
-
-class SQLAlchemyProfileRepository(ProfileRepository):
-    """Output adapter implementing the ProfileRepository interface using SQLAlchemy."""
-
-    def __init__(self, db: Session):
-        self.db = db
-
-    def _map_to_domain(self, model: ProfileModel) -> Profile:
-        """Map a database model to a domain entity."""
-        profile = Profile(
-            id=model.id,
-            name=model.name,
-            email=model.email,
-            specialty=model.specialty,
-            linkedin=model.linkedin,
-            status=ProfileStatus(model.status.value),
-            start_date=model.start_date,
-            end_date=model.end_date,
-        )
-
-        # Map history entries
-        profile.history = [
-            ProfileHistory(
-                id=history.id,
-                profile_id=history.profile_id,
-                status=ProfileStatus(history.status.value),
-                changed_at=history.changed_at,
-                profile=profile,
-            )
-            for history in model.history
-        ]
-
-        return profile
-
-    def _map_to_model(self, entity: Profile) -> ProfileModel:
-        """Map a domain entity to a database model."""
-        # If entity has an ID, it might already exist in the database
-        if entity.id:
-            model = self.db.query(ProfileModel).filter(ProfileModel.id == entity.id).first()
-            if model:
-                # Update existing model
-                model.name = entity.name
-                model.email = entity.email
-                model.specialty = entity.specialty
-                model.linkedin = entity.linkedin
-                model.status = ProfileStatusModel(entity.status.value)
-                model.start_date = entity.start_date
-                model.end_date = entity.end_date
-                return model
-
-        # Create new model
-        model = ProfileModel(
-            id=entity.id,
-            name=entity.name,
-            email=entity.email,
-            specialty=entity.specialty,
-            linkedin=entity.linkedin,
-            status=ProfileStatusModel(entity.status.value),
-            start_date=entity.start_date,
-            end_date=entity.end_date,
-        )
-
-        return model
-
-    def create(self, profile: Profile) -> Profile:
-        """Create a new profile."""
-        model = self._map_to_model(profile)
-        self.db.add(model)
-        self.db.commit()
-        self.db.refresh(model)
-
-        # Set the ID from the database
-        profile.id = model.id
-
-        # Create history entry
-        history_model = ProfileHistoryModel(
-            profile_id=model.id, status=ProfileStatusModel(profile.status.value)
-        )
-        self.db.add(history_model)
-        self.db.commit()
-
-        return self._map_to_domain(model)
-
-    def get_by_id(self, profile_id: int) -> Optional[Profile]:
-        """Get a profile by ID."""
-        model = self.db.query(ProfileModel).filter(ProfileModel.id == profile_id).first()
-        if not model:
-            return None
-        return self._map_to_domain(model)
-
-    def get_all(self, skip: int = 0, limit: int = 10) -> List[Profile]:
-        """Get all profiles with pagination."""
-        models = self.db.query(ProfileModel).offset(skip).limit(limit).all()
-        return [self._map_to_domain(model) for model in models]
-
-    def update(self, profile: Profile) -> Profile:
-        """Update a profile."""
-        # Get the existing model
-        model = self.db.query(ProfileModel).filter(ProfileModel.id == profile.id).first()
-        if not model:
-            return None
-
-        # Update model fields
-        model.name = profile.name
-        model.email = profile.email
-        model.specialty = profile.specialty
-        model.linkedin = profile.linkedin
-        model.status = ProfileStatusModel(profile.status.value)
-        model.start_date = profile.start_date
-        model.end_date = profile.end_date
-
-        # Commit changes
-        self.db.commit()
-        self.db.refresh(model)
-
-        # Create history entry for status changes
-        # This matches the behavior in the original crud.py
-        history_model = ProfileHistoryModel(
-            profile_id=model.id, status=ProfileStatusModel(profile.status.value)
-        )
-        self.db.add(history_model)
-        self.db.commit()
-        self.db.refresh(model)
-
-        return self._map_to_domain(model)
-
-    def delete(self, profile_id: int) -> Optional[Profile]:
-        """Delete a profile."""
-        model = self.db.query(ProfileModel).filter(ProfileModel.id == profile_id).first()
-        if not model:
-            return None
-
-        # Map to domain entity before deletion
-        profile = self._map_to_domain(model)
-
-        # Actually delete the profile from the database
-        # This matches the behavior in the original crud.py
-        self.db.delete(model)
-        self.db.commit()
-
-        return profile
\ No newline at end of file
diff --git a/app/core/adapters/input/__init__.py b/app/core/adapters/input/__init__.py
deleted file mode 100644
index e69de29..0000000
diff --git a/app/core/adapters/input/api/__init__.py b/app/core/adapters/input/api/__init__.py
deleted file mode 100644
index 5dbf6ca..0000000
--- a/app/core/adapters/input/api/__init__.py
+++ /dev/null
@@ -1,3 +0,0 @@
-from app.core.adapters.input.api.routes import router
-
-__all__ = ["router"]
\ No newline at end of file
diff --git a/app/core/adapters/input/api/dependencies.py b/app/core/adapters/input/api/dependencies.py
deleted file mode 100644
index 7117eb0..0000000
--- a/app/core/adapters/input/api/dependencies.py
+++ /dev/null
@@ -1,10 +0,0 @@
-from app.core.ports.output import ProfileRepository
-from app.core.adapters.output import SQLAlchemyProfileRepository
-from typing import Any
-
-def get_profile_repository(db: Any) -> ProfileRepository:
-    """
-    Factory function that returns a ProfileRepository implementation.
-    This hides the SQLAlchemy dependency from the routes.
-    """
-    return SQLAlchemyProfileRepository(db)
\ No newline at end of file
diff --git a/app/core/adapters/input/api/routes.py b/app/core/adapters/input/api/routes.py
deleted file mode 100644
index 20b1be4..0000000
--- a/app/core/adapters/input/api/routes.py
+++ /dev/null
@@ -1,70 +0,0 @@
-from fastapi import APIRouter, Depends, HTTPException
-from sqlalchemy.orm import Session
-from app.core.database import get_db
-from app.core.adapters.input import ProfileServiceAdapter
-from app.core.adapters.output import SQLAlchemyProfileRepository
-from app.schemas import ProfileCreate, ProfileUpdate, ProfileResponse
-from typing import List
-
-router = APIRouter()
-
-
-# 🔹 Crear un nuevo perfil
-@router.post("/profiles/", response_model=ProfileResponse)
-def create_new_profile(profile: ProfileCreate, db: Session = Depends(get_db)):
-    repository = SQLAlchemyProfileRepository(db)
-    profile_service = ProfileServiceAdapter(repository)
-    return profile_service.create_profile(
-        name=profile.name,
-        email=profile.email,
-        specialty=profile.specialty,
-        linkedin=profile.linkedin,
-    )
-
-
-# 🔹 Obtener un perfil por ID
-@router.get("/profiles/{profile_id}", response_model=ProfileResponse)
-def read_profile(profile_id: int, db: Session = Depends(get_db)):
-    repository = SQLAlchemyProfileRepository(db)
-    profile_service = ProfileServiceAdapter(repository)
-    profile = profile_service.get_profile(profile_id)
-    if not profile:
-        raise HTTPException(status_code=404, detail="Perfil no encontrado")
-    return profile
-
-
-# 🔹 Obtener todos los perfiles
-@router.get("/profiles/", response_model=List[ProfileResponse])
-def read_profiles(skip: int = 0, limit: int = 10, db: Session = Depends(get_db)):
-    repository = SQLAlchemyProfileRepository(db)
-    profile_service = ProfileServiceAdapter(repository)
-    return profile_service.get_profiles(skip, limit)
-
-
-# 🔹 Actualizar un perfil
-@router.put("/profiles/{profile_id}", response_model=ProfileResponse)
-def update_existing_profile(profile_id: int, profile: ProfileUpdate, db: Session = Depends(get_db)):
-    repository = SQLAlchemyProfileRepository(db)
-    profile_service = ProfileServiceAdapter(repository)
-    updated_profile = profile_service.update_profile(
-        profile_id=profile_id,
-        name=profile.name,
-        email=profile.email,
-        specialty=profile.specialty,
-        linkedin=profile.linkedin,
-        status=profile.status,
-    )
-    if not updated_profile:
-        raise HTTPException(status_code=404, detail="Perfil no encontrado")
-    return updated_profile
-
-
-# 🔹 Eliminar un perfil
-@router.delete("/profiles/{profile_id}")
-def delete_existing_profile(profile_id: int, db: Session = Depends(get_db)):
-    repository = SQLAlchemyProfileRepository(db)
-    profile_service = ProfileServiceAdapter(repository)
-    deleted_profile = profile_service.delete_profile(profile_id)
-    if not deleted_profile:
-        raise HTTPException(status_code=404, detail="Perfil no encontrado")
-    return {"message": "Perfil eliminado"}
\ No newline at end of file
diff --git a/app/core/adapters/input/api/schemas.py b/app/core/adapters/input/api/schemas.py
deleted file mode 100644
index ebce1b3..0000000
--- a/app/core/adapters/input/api/schemas.py
+++ /dev/null
@@ -1,31 +0,0 @@
-from pydantic import BaseModel, EmailStr
-from datetime import datetime
-from typing import Optional
-
-
-# 🔹 Esquema para crear un perfil
-class ProfileCreate(BaseModel):
-    name: str
-    email: EmailStr
-    specialty: str
-    linkedin: Optional[str] = None
-
-
-# 🔹 Esquema para actualizar un perfil
-class ProfileUpdate(BaseModel):
-    name: Optional[str] = None
-    email: Optional[EmailStr] = None
-    specialty: Optional[str] = None
-    linkedin: Optional[str] = None
-    status: Optional[str] = None
-
-
-# 🔹 Esquema para mostrar un perfil
-class ProfileResponse(ProfileCreate):
-    id: int
-    status: str
-    start_date: datetime
-    end_date: Optional[datetime] = None
-
-    class Config:
-        from_attributes = True
\ No newline at end of file
diff --git a/app/core/adapters/input/api/schemas/__init__.py b/app/core/adapters/input/api/schemas/__init__.py
deleted file mode 100644
index 74a9545..0000000
--- a/app/core/adapters/input/api/schemas/__init__.py
+++ /dev/null
@@ -1,3 +0,0 @@
-from app.core.adapters.input.api.schemas.schemas import ProfileCreate, ProfileUpdate, ProfileResponse
-
-__all__ = ["ProfileCreate", "ProfileUpdate", "ProfileResponse"]
\ No newline at end of file
diff --git a/app/core/adapters/input/api/schemas/schemas.py b/app/core/adapters/input/api/schemas/schemas.py
deleted file mode 100644
index ebce1b3..0000000
--- a/app/core/adapters/input/api/schemas/schemas.py
+++ /dev/null
@@ -1,31 +0,0 @@
-from pydantic import BaseModel, EmailStr
-from datetime import datetime
-from typing import Optional
-
-
-# 🔹 Esquema para crear un perfil
-class ProfileCreate(BaseModel):
-    name: str
-    email: EmailStr
-    specialty: str
-    linkedin: Optional[str] = None
-
-
-# 🔹 Esquema para actualizar un perfil
-class ProfileUpdate(BaseModel):
-    name: Optional[str] = None
-    email: Optional[EmailStr] = None
-    specialty: Optional[str] = None
-    linkedin: Optional[str] = None
-    status: Optional[str] = None
-
-
-# 🔹 Esquema para mostrar un perfil
-class ProfileResponse(ProfileCreate):
-    id: int
-    status: str
-    start_date: datetime
-    end_date: Optional[datetime] = None
-
-    class Config:
-        from_attributes = True
\ No newline at end of file
diff --git a/app/core/adapters/input/db_service_adapter.py b/app/core/adapters/input/db_service_adapter.py
deleted file mode 100644
index 565f87c..0000000
--- a/app/core/adapters/input/db_service_adapter.py
+++ /dev/null
@@ -1,64 +0,0 @@
-from typing import List, Optional
-from app.core.domain.entities import Profile, ProfileStatus
-from app.core.ports.input import ProfileUseCases
-from app.services.db_service import DBService
-
-
-class DBServiceAdapter(ProfileUseCases):
-    """
-    Input adapter implementing the ProfileUseCases interface using the legacy DBService.
-    This adapter is maintained for backward compatibility.
-    New code should use the ProfileServiceAdapter directly.
-    """
-
-    def __init__(self, db_service: DBService):
-        self.db_service = db_service
-
-    def create_profile(
-        self, name: str, email: str, specialty: str, linkedin: Optional[str] = None
-    ) -> Profile:
-        """Create a new profile."""
-        from app.schemas import ProfileCreate
-        
-        profile_data = ProfileCreate(
-            name=name,
-            email=email,
-            specialty=specialty,
-            linkedin=linkedin
-        )
-        
-        return self.db_service.create_profile(profile_data)
-
-    def get_profile(self, profile_id: int) -> Optional[Profile]:
-        """Get a profile by ID."""
-        return self.db_service.get_profile(profile_id)
-
-    def get_profiles(self, skip: int = 0, limit: int = 10) -> List[Profile]:
-        """Get all profiles with pagination."""
-        return self.db_service.get_profiles(skip, limit)
-
-    def update_profile(
-        self,
-        profile_id: int,
-        name: Optional[str] = None,
-        email: Optional[str] = None,
-        specialty: Optional[str] = None,
-        linkedin: Optional[str] = None,
-        status: Optional[str] = None,
-    ) -> Optional[Profile]:
-        """Update a profile."""
-        from app.schemas import ProfileUpdate
-        
-        profile_data = ProfileUpdate(
-            name=name,
-            email=email,
-            specialty=specialty,
-            linkedin=linkedin,
-            status=status
-        )
-        
-        return self.db_service.update_profile(profile_id, profile_data)
-
-    def delete_profile(self, profile_id: int) -> Optional[Profile]:
-        """Delete a profile."""
-        return self.db_service.delete_profile(profile_id)
\ No newline at end of file
diff --git a/app/core/adapters/input/profile_service_adapter.py b/app/core/adapters/input/profile_service_adapter.py
deleted file mode 100644
index 1d2e231..0000000
--- a/app/core/adapters/input/profile_service_adapter.py
+++ /dev/null
@@ -1,60 +0,0 @@
-from typing import List, Optional
-from app.core.domain.entities import Profile, ProfileStatus
-from app.core.domain.services import ProfileService
-from app.core.ports.input import ProfileUseCases
-from app.core.ports.output import ProfileRepository
-
-class ProfileServiceAdapter(ProfileUseCases):
-    """Input adapter implementing the ProfileUseCases interface."""
-    
-    def __init__(self, profile_repository: ProfileRepository):
-        self.profile_repository = profile_repository
-        self.profile_service = ProfileService()
-    
-    def create_profile(self, name: str, email: str, specialty: str, linkedin: Optional[str] = None) -> Profile:
-        """Create a new profile."""
-        profile = self.profile_service.create_profile(name, email, specialty, linkedin)
-        return self.profile_repository.create(profile)
-    
-    def get_profile(self, profile_id: int) -> Optional[Profile]:
-        """Get a profile by ID."""
-        return self.profile_repository.get_by_id(profile_id)
-    
-    def get_profiles(self, skip: int = 0, limit: int = 10) -> List[Profile]:
-        """Get all profiles with pagination."""
-        return self.profile_repository.get_all(skip, limit)
-    
-    def update_profile(self, profile_id: int, 
-                      name: Optional[str] = None, 
-                      email: Optional[str] = None,
-                      specialty: Optional[str] = None,
-                      linkedin: Optional[str] = None,
-                      status: Optional[str] = None) -> Optional[Profile]:
-        """Update a profile."""
-        profile = self.profile_repository.get_by_id(profile_id)
-        if not profile:
-            return None
-        
-        # Convert status string to enum if provided
-        status_enum = None
-        if status:
-            try:
-                status_enum = ProfileStatus(status)
-            except ValueError:
-                # Invalid status value, ignore it
-                pass
-        
-        updated_profile = self.profile_service.update_profile(
-            profile, name, email, specialty, linkedin, status_enum
-        )
-        
-        return self.profile_repository.update(updated_profile)
-    
-    def delete_profile(self, profile_id: int) -> Optional[Profile]:
-        """Delete a profile."""
-        profile = self.profile_repository.get_by_id(profile_id)
-        if not profile:
-            return None
-        
-        deleted_profile = self.profile_service.delete_profile(profile)
-        return self.profile_repository.update(deleted_profile)
\ No newline at end of file
diff --git a/app/core/adapters/output/__init__.py b/app/core/adapters/output/__init__.py
deleted file mode 100644
index e69de29..0000000
diff --git a/app/core/adapters/output/sqlalchemy_models.py b/app/core/adapters/output/sqlalchemy_models.py
deleted file mode 100644
index ef095b8..0000000
--- a/app/core/adapters/output/sqlalchemy_models.py
+++ /dev/null
@@ -1,43 +0,0 @@
-import enum
-from datetime import datetime
-from sqlalchemy import Column, Integer, String, ForeignKey, Enum, DateTime
-from sqlalchemy.orm import relationship
-from app.core.database import Base
-
-
-# 🔹 Estado del perfil
-class ProfileStatus(enum.Enum):
-    ACTIVE = "active"
-    INACTIVE = "inactive"
-    SUSPENDED = "suspended"
-    DELETED = "deleted"
-
-
-# 🔹 Modelo principal de perfiles
-class Profile(Base):
-    __tablename__ = "profiles"
-
-    id = Column(Integer, primary_key=True, index=True)
-    name = Column(String, nullable=False)
-    email = Column(String, unique=True, nullable=False)
-    specialty = Column(String, nullable=False)
-    linkedin = Column(String, nullable=True)
-    status = Column(Enum(ProfileStatus), default=ProfileStatus.ACTIVE, nullable=False)
-    start_date = Column(DateTime, default=datetime.utcnow, nullable=False)
-    end_date = Column(DateTime, nullable=True)
-
-    # Relación con el historial de estados
-    history = relationship("ProfileHistory", back_populates="profile", cascade="all, delete-orphan")
-
-
-# 🔹 Historial de estados del perfil
-class ProfileHistory(Base):
-    __tablename__ = "profile_history"
-
-    id = Column(Integer, primary_key=True, index=True)
-    profile_id = Column(Integer, ForeignKey("profiles.id"), nullable=False)
-    status = Column(Enum(ProfileStatus), nullable=False)
-    changed_at = Column(DateTime, default=datetime.utcnow, nullable=False)
-
-    # Relación inversa con Profile
-    profile = relationship("Profile", back_populates="history")
\ No newline at end of file
diff --git a/app/core/adapters/output/sqlalchemy_repository.py b/app/core/adapters/output/sqlalchemy_repository.py
deleted file mode 100644
index 0b98b12..0000000
--- a/app/core/adapters/output/sqlalchemy_repository.py
+++ /dev/null
@@ -1,144 +0,0 @@
-from typing import List, Optional
-from sqlalchemy.orm import Session
-from app.core.domain.entities import Profile, ProfileHistory, ProfileStatus
-from app.core.ports.output import ProfileRepository
-from app.models.models import Profile as ProfileModel
-from app.models.models import ProfileHistory as ProfileHistoryModel
-from app.models.models import ProfileStatus as ProfileStatusModel
-
-class SQLAlchemyProfileRepository(ProfileRepository):
-    """Output adapter implementing the ProfileRepository interface using SQLAlchemy."""
-    
-    def __init__(self, db: Session):
-        self.db = db
-    
-    def _map_to_domain(self, model: ProfileModel) -> Profile:
-        """Map a database model to a domain entity."""
-        profile = Profile(
-            id=model.id,
-            name=model.name,
-            email=model.email,
-            specialty=model.specialty,
-            linkedin=model.linkedin,
-            status=ProfileStatus(model.status.value),
-            start_date=model.start_date,
-            end_date=model.end_date
-        )
-        
-        # Map history entries
-        profile.history = [
-            ProfileHistory(
-                id=history.id,
-                profile_id=history.profile_id,
-                status=ProfileStatus(history.status.value),
-                changed_at=history.changed_at,
-                profile=profile
-            )
-            for history in model.history
-        ]
-        
-        return profile
-    
-    def _map_to_model(self, entity: Profile) -> ProfileModel:
-        """Map a domain entity to a database model."""
-        # If entity has an ID, it might already exist in the database
-        if entity.id:
-            model = self.db.query(ProfileModel).filter(ProfileModel.id == entity.id).first()
-            if model:
-                # Update existing model
-                model.name = entity.name
-                model.email = entity.email
-                model.specialty = entity.specialty
-                model.linkedin = entity.linkedin
-                model.status = ProfileStatusModel(entity.status.value)
-                model.start_date = entity.start_date
-                model.end_date = entity.end_date
-                return model
-        
-        # Create new model
-        model = ProfileModel(
-            id=entity.id,
-            name=entity.name,
-            email=entity.email,
-            specialty=entity.specialty,
-            linkedin=entity.linkedin,
-            status=ProfileStatusModel(entity.status.value),
-            start_date=entity.start_date,
-            end_date=entity.end_date
-        )
-        
-        return model
-    
-    def create(self, profile: Profile) -> Profile:
-        """Create a new profile."""
-        model = self._map_to_model(profile)
-        self.db.add(model)
-        self.db.commit()
-        self.db.refresh(model)
-        
-        # Set the ID from the database
-        profile.id = model.id
-        
-        # Create history entry
-        history_model = ProfileHistoryModel(
-            profile_id=model.id,
-            status=ProfileStatusModel(profile.status.value)
-        )
-        self.db.add(history_model)
-        self.db.commit()
-        
-        return self._map_to_domain(model)
-    
-    def get_by_id(self, profile_id: int) -> Optional[Profile]:
-        """Get a profile by ID."""
-        model = self.db.query(ProfileModel).filter(ProfileModel.id == profile_id).first()
-        if not model:
-            return None
-        return self._map_to_domain(model)
-    
-    def get_all(self, skip: int = 0, limit: int = 10) -> List[Profile]:
-        """Get all profiles with pagination."""
-        models = self.db.query(ProfileModel).offset(skip).limit(limit).all()
-        return [self._map_to_domain(model) for model in models]
-    
-    def update(self, profile: Profile) -> Profile:
-        """Update a profile."""
-        model = self._map_to_model(profile)
-        self.db.commit()
-        self.db.refresh(model)
-        
-        # If status changed, create a history entry
-        if profile.history and profile.history[-1].status != ProfileStatus(model.status.value):
-            history_model = ProfileHistoryModel(
-                profile_id=model.id,
-                status=ProfileStatusModel(profile.status.value)
-            )
-            self.db.add(history_model)
-            self.db.commit()
-        
-        return self._map_to_domain(model)
-    
-    def delete(self, profile_id: int) -> Optional[Profile]:
-        """Delete a profile."""
-        model = self.db.query(ProfileModel).filter(ProfileModel.id == profile_id).first()
-        if not model:
-            return None
-        
-        profile = self._map_to_domain(model)
-        profile.status = ProfileStatus.DELETED
-        profile.end_date = profile.end_date or datetime.utcnow()
-        
-        model.status = ProfileStatusModel.DELETED
-        model.end_date = profile.end_date
-        
-        # Create history entry
-        history_model = ProfileHistoryModel(
-            profile_id=model.id,
-            status=ProfileStatusModel.DELETED
-        )
-        self.db.add(history_model)
-        
-        self.db.commit()
-        self.db.refresh(model)
-        
-        return self._map_to_domain(model)
\ No newline at end of file
diff --git a/app/core/common/__init__.py b/app/core/common/__init__.py
deleted file mode 100644
index 69ca08a..0000000
--- a/app/core/common/__init__.py
+++ /dev/null
@@ -1 +0,0 @@
-# Common code used throughout the application
\ No newline at end of file
diff --git a/app/core/common/enums.py b/app/core/common/enums.py
deleted file mode 100644
index 5c19f88..0000000
--- a/app/core/common/enums.py
+++ /dev/null
@@ -1,12 +0,0 @@
-import enum
-
-
-class ProfileStatus(enum.Enum):
-    """
-    Enum representing the status of a profile.
-    Used throughout the application to ensure consistency.
-    """
-    ACTIVE = "active"
-    INACTIVE = "inactive"
-    SUSPENDED = "suspended"
-    DELETED = "deleted"
\ No newline at end of file
diff --git a/app/core/domain/__init__.py b/app/core/domain/__init__.py
deleted file mode 100644
index 5fbc731..0000000
--- a/app/core/domain/__init__.py
+++ /dev/null
@@ -1,10 +0,0 @@
-from app.core.domain.entities import Profile, ProfileHistory, ProfileStatus
-from app.core.domain.services import ProfileService
-
-__all__ = [
-    # Entities
-    "Profile", "ProfileHistory", "ProfileStatus",
-    
-    # Services
-    "ProfileService"
-]
\ No newline at end of file
diff --git a/app/core/domain/entities/__init__.py b/app/core/domain/entities/__init__.py
deleted file mode 100644
index e69de29..0000000
diff --git a/app/core/domain/entities/profile.py b/app/core/domain/entities/profile.py
deleted file mode 100644
index 6c7ecc1..0000000
--- a/app/core/domain/entities/profile.py
+++ /dev/null
@@ -1,41 +0,0 @@
-from datetime import datetime
-from typing import Optional, List
-from app.core.domain.entities.profile_status import ProfileStatus
-
-class Profile:
-    def __init__(
-        self,
-        id: Optional[int] = None,
-        name: str = "",
-        email: str = "",
-        specialty: str = "",
-        linkedin: Optional[str] = None,
-        status: ProfileStatus = ProfileStatus.ACTIVE,
-        start_date: datetime = None,
-        end_date: Optional[datetime] = None,
-        history: List["ProfileHistory"] = None
-    ):
-        self.id = id
-        self.name = name
-        self.email = email
-        self.specialty = specialty
-        self.linkedin = linkedin
-        self.status = status
-        self.start_date = start_date or datetime.utcnow()
-        self.end_date = end_date
-        self.history = history or []
-
-class ProfileHistory:
-    def __init__(
-        self,
-        id: Optional[int] = None,
-        profile_id: int = None,
-        status: ProfileStatus = None,
-        changed_at: datetime = None,
-        profile: Optional[Profile] = None
-    ):
-        self.id = id
-        self.profile_id = profile_id
-        self.status = status
-        self.changed_at = changed_at or datetime.utcnow()
-        self.profile = profile
\ No newline at end of file
diff --git a/app/core/domain/entities/profile_status.py b/app/core/domain/entities/profile_status.py
deleted file mode 100644
index d1d3d78..0000000
--- a/app/core/domain/entities/profile_status.py
+++ /dev/null
@@ -1,7 +0,0 @@
-import enum
-
-class ProfileStatus(enum.Enum):
-    ACTIVE = "active"
-    INACTIVE = "inactive"
-    SUSPENDED = "suspended"
-    DELETED = "deleted"
\ No newline at end of file
diff --git a/app/core/domain/services/__init__.py b/app/core/domain/services/__init__.py
deleted file mode 100644
index e69de29..0000000
diff --git a/app/core/domain/services/profile_service.py b/app/core/domain/services/profile_service.py
deleted file mode 100644
index 2f031da..0000000
--- a/app/core/domain/services/profile_service.py
+++ /dev/null
@@ -1,73 +0,0 @@
-from datetime import datetime
-from typing import List, Optional
-from app.core.domain.entities import Profile, ProfileHistory, ProfileStatus
-
-class ProfileService:
-    """Domain service for profile-related business logic."""
-    
-    def create_profile(self, name: str, email: str, specialty: str, linkedin: Optional[str] = None) -> Profile:
-        """Create a new profile with initial status."""
-        profile = Profile(
-            name=name,
-            email=email,
-            specialty=specialty,
-            linkedin=linkedin,
-            status=ProfileStatus.ACTIVE,
-            start_date=datetime.utcnow()
-        )
-        
-        # Create initial history entry
-        history = ProfileHistory(
-            profile_id=profile.id,
-            status=profile.status,
-            changed_at=datetime.utcnow(),
-            profile=profile
-        )
-        
-        profile.history.append(history)
-        return profile
-    
-    def update_profile(self, profile: Profile, 
-                      name: Optional[str] = None, 
-                      email: Optional[str] = None,
-                      specialty: Optional[str] = None,
-                      linkedin: Optional[str] = None,
-                      status: Optional[ProfileStatus] = None) -> Profile:
-        """Update a profile and record status changes."""
-        if name is not None:
-            profile.name = name
-        if email is not None:
-            profile.email = email
-        if specialty is not None:
-            profile.specialty = specialty
-        if linkedin is not None:
-            profile.linkedin = linkedin
-            
-        # If status changed, record it in history
-        if status is not None and profile.status != status:
-            profile.status = status
-            history = ProfileHistory(
-                profile_id=profile.id,
-                status=status,
-                changed_at=datetime.utcnow(),
-                profile=profile
-            )
-            profile.history.append(history)
-            
-        return profile
-    
-    def delete_profile(self, profile: Profile) -> Profile:
-        """Mark a profile as deleted."""
-        profile.status = ProfileStatus.DELETED
-        profile.end_date = datetime.utcnow()
-        
-        # Record the deletion in history
-        history = ProfileHistory(
-            profile_id=profile.id,
-            status=ProfileStatus.DELETED,
-            changed_at=datetime.utcnow(),
-            profile=profile
-        )
-        profile.history.append(history)
-        
-        return profile
\ No newline at end of file
diff --git a/app/core/ports/__init__.py b/app/core/ports/__init__.py
deleted file mode 100644
index a567e90..0000000
--- a/app/core/ports/__init__.py
+++ /dev/null
@@ -1,10 +0,0 @@
-from app.core.ports.input import ProfileUseCases
-from app.core.ports.output import ProfileRepository
-
-__all__ = [
-    # Input ports
-    "ProfileUseCases",
-    
-    # Output ports
-    "ProfileRepository"
-]
\ No newline at end of file
diff --git a/app/core/ports/input/__init__.py b/app/core/ports/input/__init__.py
deleted file mode 100644
index e69de29..0000000
diff --git a/app/core/ports/input/profile_use_cases.py b/app/core/ports/input/profile_use_cases.py
deleted file mode 100644
index 446eda4..0000000
--- a/app/core/ports/input/profile_use_cases.py
+++ /dev/null
@@ -1,36 +0,0 @@
-from abc import ABC, abstractmethod
-from typing import List, Optional
-from app.core.domain.entities import Profile, ProfileStatus
-
-class ProfileUseCases(ABC):
-    """Input port interface for profile use cases."""
-    
-    @abstractmethod
-    def create_profile(self, name: str, email: str, specialty: str, linkedin: Optional[str] = None) -> Profile:
-        """Create a new profile."""
-        pass
-    
-    @abstractmethod
-    def get_profile(self, profile_id: int) -> Optional[Profile]:
-        """Get a profile by ID."""
-        pass
-    
-    @abstractmethod
-    def get_profiles(self, skip: int = 0, limit: int = 10) -> List[Profile]:
-        """Get all profiles with pagination."""
-        pass
-    
-    @abstractmethod
-    def update_profile(self, profile_id: int, 
-                      name: Optional[str] = None, 
-                      email: Optional[str] = None,
-                      specialty: Optional[str] = None,
-                      linkedin: Optional[str] = None,
-                      status: Optional[str] = None) -> Optional[Profile]:
-        """Update a profile."""
-        pass
-    
-    @abstractmethod
-    def delete_profile(self, profile_id: int) -> Optional[Profile]:
-        """Delete a profile."""
-        pass
\ No newline at end of file
diff --git a/app/core/ports/output/__init__.py b/app/core/ports/output/__init__.py
deleted file mode 100644
index e69de29..0000000
diff --git a/app/core/ports/output/profile_repository.py b/app/core/ports/output/profile_repository.py
deleted file mode 100644
index 59e914f..0000000
--- a/app/core/ports/output/profile_repository.py
+++ /dev/null
@@ -1,31 +0,0 @@
-from abc import ABC, abstractmethod
-from typing import List, Optional
-from app.core.domain.entities import Profile
-
-class ProfileRepository(ABC):
-    """Output port interface for profile repository."""
-    
-    @abstractmethod
-    def create(self, profile: Profile) -> Profile:
-        """Create a new profile."""
-        pass
-    
-    @abstractmethod
-    def get_by_id(self, profile_id: int) -> Optional[Profile]:
-        """Get a profile by ID."""
-        pass
-    
-    @abstractmethod
-    def get_all(self, skip: int = 0, limit: int = 10) -> List[Profile]:
-        """Get all profiles with pagination."""
-        pass
-    
-    @abstractmethod
-    def update(self, profile: Profile) -> Profile:
-        """Update a profile."""
-        pass
-    
-    @abstractmethod
-    def delete(self, profile_id: int) -> Optional[Profile]:
-        """Delete a profile."""
-        pass
\ No newline at end of file
diff --git a/app/db/__init__.py b/app/db/__init__.py
index 2f0b25d..296f782 100644
--- a/app/db/__init__.py
+++ b/app/db/__init__.py
@@ -1 +1,3 @@
-# Database module
\ No newline at end of file
+from app.db.profile_repository import ProfileRepository
+
+__all__ = ["ProfileRepository"]
diff --git a/app/db/profile_repository.py b/app/db/profile_repository.py
index ed29841..17073d3 100644
--- a/app/db/profile_repository.py
+++ b/app/db/profile_repository.py
@@ -1,10 +1,10 @@
 from typing import List, Optional
 from datetime import datetime
 from sqlalchemy.orm import Session
-from app.core.domain.entities import Profile, ProfileHistory, ProfileStatus
-from app.db.sqlalchemy_models import Profile as ProfileModel
-from app.db.sqlalchemy_models import ProfileHistory as ProfileHistoryModel
-from app.db.sqlalchemy_models import ProfileStatus as ProfileStatusModel
+from app.entities import Profile, ProfileHistory, ProfileStatus
+from app.db.profile_models import Profile as ProfileModel
+from app.db.profile_models import ProfileHistory as ProfileHistoryModel
+from app.db.profile_models import ProfileStatus as ProfileStatusModel
 
 
 class ProfileRepository:
@@ -146,4 +146,4 @@ class ProfileRepository:
         self.db.delete(model)
         self.db.commit()
 
-        return profile
\ No newline at end of file
+        return profile
diff --git a/app/db/sqlalchemy_models.py b/app/db/sqlalchemy_models.py
deleted file mode 100644
index 5676c02..0000000
--- a/app/db/sqlalchemy_models.py
+++ /dev/null
@@ -1,35 +0,0 @@
-from datetime import datetime
-from sqlalchemy import Column, Integer, String, ForeignKey, Enum, DateTime
-from sqlalchemy.orm import relationship
-from app.config.database import Base
-from app.core.common import ProfileStatus
-
-
-# 🔹 Modelo principal de perfiles
-class Profile(Base):
-    __tablename__ = "profiles"
-
-    id = Column(Integer, primary_key=True, index=True)
-    name = Column(String, nullable=False)
-    email = Column(String, unique=True, nullable=False)
-    specialty = Column(String, nullable=False)
-    linkedin = Column(String, nullable=True)
-    status = Column(Enum(ProfileStatus), default=ProfileStatus.ACTIVE, nullable=False)
-    start_date = Column(DateTime, default=datetime.utcnow, nullable=False)
-    end_date = Column(DateTime, nullable=True)
-
-    # Relación con el historial de estados
-    history = relationship("ProfileHistory", back_populates="profile", cascade="all, delete-orphan")
-
-
-# 🔹 Historial de estados del perfil
-class ProfileHistory(Base):
-    __tablename__ = "profile_history"
-
-    id = Column(Integer, primary_key=True, index=True)
-    profile_id = Column(Integer, ForeignKey("profiles.id"), nullable=False)
-    status = Column(Enum(ProfileStatus), nullable=False)
-    changed_at = Column(DateTime, default=datetime.utcnow, nullable=False)
-
-    # Relación inversa con Profile
-    profile = relationship("Profile", back_populates="history")
\ No newline at end of file
diff --git a/app/services/__init__.py b/app/services/__init__.py
index e69de29..f0cd3b7 100644
--- a/app/services/__init__.py
+++ b/app/services/__init__.py
@@ -0,0 +1,3 @@
+from app.services.profile_service import ProfileService
+
+__all__ = ["ProfileService"]
diff --git a/app/services/api_service.py b/app/services/api_service.py
deleted file mode 100644
index cd877f8..0000000
--- a/app/services/api_service.py
+++ /dev/null
@@ -1,38 +0,0 @@
-from fastapi import HTTPException
-from sqlalchemy.orm import Session
-from app.schemas import ProfileCreate, ProfileUpdate, ProfileResponse
-from app.services.db_service import DBService
-from typing import List
-
-class APIService:
-    def __init__(self, db: Session):
-        self.db_service = DBService(db)
-
-    def create_profile(self, profile: ProfileCreate) -> ProfileResponse:
-        """Create a new profile."""
-        return self.db_service.create_profile(profile)
-
-    def get_profile(self, profile_id: int) -> ProfileResponse:
-        """Get a profile by ID."""
-        profile = self.db_service.get_profile(profile_id)
-        if not profile:
-            raise HTTPException(status_code=404, detail="Perfil no encontrado")
-        return profile
-
-    def get_profiles(self, skip: int = 0, limit: int = 10) -> List[ProfileResponse]:
-        """Get all profiles with pagination."""
-        return self.db_service.get_profiles(skip, limit)
-
-    def update_profile(self, profile_id: int, profile: ProfileUpdate) -> ProfileResponse:
-        """Update a profile."""
-        updated_profile = self.db_service.update_profile(profile_id, profile)
-        if not updated_profile:
-            raise HTTPException(status_code=404, detail="Perfil no encontrado")
-        return updated_profile
-
-    def delete_profile(self, profile_id: int) -> dict:
-        """Delete a profile."""
-        deleted_profile = self.db_service.delete_profile(profile_id)
-        if not deleted_profile:
-            raise HTTPException(status_code=404, detail="Perfil no encontrado")
-        return {"message": "Perfil eliminado"}
\ No newline at end of file
diff --git a/app/services/db_service.py b/app/services/db_service.py
deleted file mode 100644
index b75285a..0000000
--- a/app/services/db_service.py
+++ /dev/null
@@ -1,58 +0,0 @@
-from sqlalchemy.orm import Session
-from app.models import Profile, ProfileHistory, ProfileStatus
-from app.schemas import ProfileCreate, ProfileUpdate
-from datetime import datetime
-
-class DBService:
-    def __init__(self, db: Session):
-        self.db = db
-
-    def create_profile(self, profile_data: ProfileCreate):
-        """Create a new profile and add a history entry."""
-        profile = Profile(**profile_data.dict())
-        self.db.add(profile)
-        self.db.commit()
-        self.db.refresh(profile)
-
-        # Guardar historial de estado
-        history = ProfileHistory(profile_id=profile.id, status=profile.status)
-        self.db.add(history)
-        self.db.commit()
-
-        return profile
-
-    def get_profile(self, profile_id: int):
-        """Get a profile by ID."""
-        return self.db.query(Profile).filter(Profile.id == profile_id).first()
-
-    def get_profiles(self, skip: int = 0, limit: int = 10):
-        """Get all profiles with pagination."""
-        return self.db.query(Profile).offset(skip).limit(limit).all()
-
-    def update_profile(self, profile_id: int, profile_data: ProfileUpdate):
-        """Update a profile and add a history entry if status changes."""
-        profile = self.db.query(Profile).filter(Profile.id == profile_id).first()
-        if not profile:
-            return None
-
-        for key, value in profile_data.dict(exclude_unset=True).items():
-            setattr(profile, key, value)
-
-        self.db.commit()
-        self.db.refresh(profile)
-
-        # Guardar historial de estado si cambió
-        if "status" in profile_data.dict():
-            history = ProfileHistory(profile_id=profile.id, status=profile.status)
-            self.db.add(history)
-            self.db.commit()
-
-        return profile
-
-    def delete_profile(self, profile_id: int):
-        """Delete a profile."""
-        profile = self.db.query(Profile).filter(Profile.id == profile_id).first()
-        if profile:
-            self.db.delete(profile)
-            self.db.commit()
-        return profile
\ No newline at end of file
diff --git a/clean-adapters.sh b/clean-adapters.sh
old mode 100644
new mode 100755
index 0930c4c..91518a6
--- a/clean-adapters.sh
+++ b/clean-adapters.sh
@@ -8,9 +8,20 @@ echo "🧹 Cleaning up redundant adapter implementations..."
 echo "Removing app/core/adapters/api directory..."
 rm -rf app/core/adapters/api
 
-# Remove redundant DB adapter directory
-echo "Removing app/core/adapters/db directory..."
+# Clean up redundant files in DB adapter directory while preserving files used by tests
+echo "Cleaning up app/core/adapters/db directory..."
+# Create a temporary directory to store files we want to keep
+mkdir -p temp_db_files
+# Copy the sqlalchemy_models.py file that's used by tests
+cp app/core/adapters/db/sqlalchemy_models.py temp_db_files/
+# Remove the DB adapter directory
 rm -rf app/core/adapters/db
+# Recreate the directory structure
+mkdir -p app/core/adapters/db
+# Move the preserved files back
+mv temp_db_files/sqlalchemy_models.py app/core/adapters/db/
+# Remove the temporary directory
+rm -rf temp_db_files
 
 # Update the adapters/__init__.py file to avoid import errors
 echo "Updating app/core/adapters/__init__.py..."
@@ -19,4 +30,11 @@ cat > app/core/adapters/__init__.py << EOF
 # The adapter implementations have been consolidated
 EOF
 
-echo "✅ Cleanup of redundant adapter implementations completed successfully."
\ No newline at end of file
+# Update the adapters/db/__init__.py file to avoid import errors
+echo "Updating app/core/adapters/db/__init__.py..."
+cat > app/core/adapters/db/__init__.py << EOF
+# This file contains only the models needed for tests
+# The adapter implementations have been consolidated
+EOF
+
+echo "✅ Cleanup of redundant adapter implementations completed successfully."
diff --git a/clean-redundant-dirs.sh b/clean-redundant-dirs.sh
old mode 100644
new mode 100755
diff --git a/clean.sh b/clean.sh
old mode 100644
new mode 100755
index ae3c439..f496414
--- a/clean.sh
+++ b/clean.sh
@@ -21,4 +21,16 @@ rm -f test.db
 echo "Removing __pycache__ directories..."
 find . -type d -name __pycache__ -exec rm -rf {} +
 
-echo "✅ Cleanup completed successfully."
\ No newline at end of file
+# Remove IDE specific directories
+echo "Removing IDE specific directories..."
+rm -rf .idea
+rm -rf .vscode
+
+# Remove redundant root-level files that have been refactored into the app package
+echo "Removing redundant root-level files..."
+rm -f routes.py
+rm -f crud.py
+rm -f schemas.py
+rm -f models.py
+
+echo "✅ Cleanup completed successfully."
diff --git a/config/database.py b/config/database.py
deleted file mode 100644
index 6d8796c..0000000
--- a/config/database.py
+++ /dev/null
@@ -1,24 +0,0 @@
-import os
-from sqlalchemy import create_engine
-from sqlalchemy.ext.declarative import declarative_base
-from sqlalchemy.orm import sessionmaker
-from dotenv import load_dotenv
-
-# 🔹 Cargar variables de entorno desde .env
-load_dotenv()
-
-# 🔹 URL de la base de datos (debe coincidir con docker-compose.yml)
-DATABASE_URL = os.getenv("DATABASE_URL", "postgresql://showroom_user:password@postgres:5432/showroom_db")
-
-# 🔹 Crear conexión con PostgreSQL
-engine = create_engine(DATABASE_URL)
-SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)
-Base = declarative_base()
-
-# 🔹 Dependencia de sesión para FastAPI
-def get_db():
-    db = SessionLocal()
-    try:
-        yield db
-    finally:
-        db.close()
\ No newline at end of file
diff --git a/crud.py b/crud.py
deleted file mode 100644
index 683aee9..0000000
--- a/crud.py
+++ /dev/null
@@ -1,54 +0,0 @@
-from sqlalchemy.orm import Session
-from models import Profile, ProfileHistory, ProfileStatus
-from schemas import ProfileCreate, ProfileUpdate
-from datetime import datetime
-
-# 🔹 Crear un nuevo perfil
-def create_profile(db: Session, profile_data: ProfileCreate):
-    profile = Profile(**profile_data.dict())
-    db.add(profile)
-    db.commit()
-    db.refresh(profile)
-
-    # Guardar historial de estado
-    history = ProfileHistory(profile_id=profile.id, status=profile.status)
-    db.add(history)
-    db.commit()
-
-    return profile
-
-# 🔹 Obtener un perfil por ID
-def get_profile(db: Session, profile_id: int):
-    return db.query(Profile).filter(Profile.id == profile_id).first()
-
-# 🔹 Obtener todos los perfiles
-def get_profiles(db: Session, skip: int = 0, limit: int = 10):
-    return db.query(Profile).offset(skip).limit(limit).all()
-
-# 🔹 Actualizar perfil
-def update_profile(db: Session, profile_id: int, profile_data: ProfileUpdate):
-    profile = db.query(Profile).filter(Profile.id == profile_id).first()
-    if not profile:
-        return None
-
-    for key, value in profile_data.dict(exclude_unset=True).items():
-        setattr(profile, key, value)
-
-    db.commit()
-    db.refresh(profile)
-
-    # Guardar historial de estado si cambió
-    if "status" in profile_data.dict():
-        history = ProfileHistory(profile_id=profile.id, status=profile.status)
-        db.add(history)
-        db.commit()
-
-    return profile
-
-# 🔹 Eliminar perfil
-def delete_profile(db: Session, profile_id: int):
-    profile = db.query(Profile).filter(Profile.id == profile_id).first()
-    if profile:
-        db.delete(profile)
-        db.commit()
-    return profile
diff --git a/database.py b/database.py
deleted file mode 100644
index 54db071..0000000
--- a/database.py
+++ /dev/null
@@ -1,24 +0,0 @@
-import os
-from sqlalchemy import create_engine
-from sqlalchemy.ext.declarative import declarative_base
-from sqlalchemy.orm import sessionmaker
-from dotenv import load_dotenv
-
-# 🔹 Cargar variables de entorno desde .env
-load_dotenv()
-
-# 🔹 URL de la base de datos (debe coincidir con docker-compose.yml)
-DATABASE_URL = os.getenv("DATABASE_URL", "postgresql://showroom_user:password@postgres:5432/showroom_db")
-
-# 🔹 Crear conexión con PostgreSQL
-engine = create_engine(DATABASE_URL)
-SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)
-Base = declarative_base()
-
-# 🔹 Dependencia de sesión para FastAPI
-def get_db():
-    db = SessionLocal()
-    try:
-        yield db
-    finally:
-        db.close()
diff --git a/format.sh b/format.sh
old mode 100644
new mode 100755
diff --git a/install.sh b/install.sh
old mode 100644
new mode 100755
diff --git a/lint.sh b/lint.sh
old mode 100644
new mode 100755
diff --git a/main.py b/main.py
index ee65196..3bf8ec6 100644
--- a/main.py
+++ b/main.py
@@ -1,39 +1,7 @@
-import time
-from fastapi import FastAPI
-from fastapi.middleware.cors import CORSMiddleware
-from fastapi.responses import JSONResponse
-from database import engine, Base
-import models  # Asegura que los modelos se carguen
-from routes import router  # Importa las rutas
+# This file is used to run the application with uvicorn
+# Example: uvicorn main:app --reload
+from app.main import app
+if __name__ == "__main__":
+    import uvicorn
 
-app = FastAPI()
-
-# 🔹 Habilitar CORS
-app.add_middleware(
-    CORSMiddleware,
-    allow_origins=["https://tl-showroom.equalitech.xyz"],
-    allow_credentials=True,
-    allow_methods=["*"],
-    allow_headers=["*"],
-)
-
-# 🔹 Asegurar que la base de datos y las tablas se creen antes de arrancar
-MAX_RETRIES = 5
-for i in range(MAX_RETRIES):
-    try:
-        Base.metadata.create_all(bind=engine)  # Crear tablas en PostgreSQL
-        print("✅ Tablas creadas en PostgreSQL")
-        break
-    except Exception as e:
-        print(f"⚠️ Intento {i+1}/{MAX_RETRIES} fallido. Reintentando en 5s...")
-        time.sleep(5)
-else:
-    print("❌ No se pudo conectar a la base de datos.")
-    raise ConnectionError("Error al conectar con la base de datos")
-
-# 🔹 Incluir rutas de la API
-app.include_router(router)
-
-@app.get("/", response_class=JSONResponse)
-def read_root():
-    return JSONResponse(content={"message": "🚀 FastAPI con SSL lista. Energizada con Docker Compose."}, media_type="application/json")
+    uvicorn.run(app, host="0.0.0.0", port=8000, reload=True)
diff --git a/models.py b/models.py
deleted file mode 100644
index 208a87c..0000000
--- a/models.py
+++ /dev/null
@@ -1,40 +0,0 @@
-import enum
-from datetime import datetime
-from sqlalchemy import Column, Integer, String, ForeignKey, Enum, DateTime
-from sqlalchemy.orm import relationship
-from database import Base
-
-# 🔹 Estado del perfil
-class ProfileStatus(enum.Enum):
-    ACTIVE = "active"
-    INACTIVE = "inactive"
-    SUSPENDED = "suspended"
-    DELETED = "deleted"
-
-# 🔹 Modelo principal de perfiles
-class Profile(Base):
-    __tablename__ = "profiles"
-
-    id = Column(Integer, primary_key=True, index=True)
-    name = Column(String, nullable=False)
-    email = Column(String, unique=True, nullable=False)
-    specialty = Column(String, nullable=False)
-    linkedin = Column(String, unique=True, nullable=True)
-    status = Column(Enum(ProfileStatus), default=ProfileStatus.ACTIVE, nullable=False)
-    start_date = Column(DateTime, default=datetime.utcnow, nullable=False)
-    end_date = Column(DateTime, nullable=True)
-
-    # Relación con el historial de estados
-    history = relationship("ProfileHistory", back_populates="profile", cascade="all, delete-orphan")
-
-# 🔹 Historial de estados del perfil
-class ProfileHistory(Base):
-    __tablename__ = "profile_history"
-
-    id = Column(Integer, primary_key=True, index=True)
-    profile_id = Column(Integer, ForeignKey("profiles.id"), nullable=False)
-    status = Column(Enum(ProfileStatus), nullable=False)
-    changed_at = Column(DateTime, default=datetime.utcnow, nullable=False)
-
-    # Relación inversa con Profile
-    profile = relationship("Profile", back_populates="history")
diff --git a/pyproject.toml b/pyproject.toml
deleted file mode 100644
index 5178d57..0000000
--- a/pyproject.toml
+++ /dev/null
@@ -1,17 +0,0 @@
-[tool.black]
-line-length = 100
-target-version = ['py38']
-include = '\.pyi?$'
-exclude = '''
-/(
-    \.git
-  | \.hg
-  | \.mypy_cache
-  | \.tox
-  | \.venv
-  | _build
-  | buck-out
-  | build
-  | dist
-)/
-'''
\ No newline at end of file
diff --git a/pytest.ini b/pytest.ini
index 6052484..3cd0beb 100644
--- a/pytest.ini
+++ b/pytest.ini
@@ -3,4 +3,4 @@ testpaths = tests
 python_files = test_*.py
 python_classes = Test*
 python_functions = test_*
-addopts = --verbose --cov=. --cov-report=term-missing
\ No newline at end of file
+addopts = --verbose
diff --git a/requirements.txt b/requirements.txt
index 506520b..c5a15ff 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -8,3 +8,13 @@ alembic
 gunicorn
 passlib[bcrypt]  # Para hashing de contraseñas si lo necesitas
 email-validator  # Para validación de emails en modelos Pydantic
+
+# Testing dependencies
+pytest
+pytest-asyncio
+httpx
+pytest-cov
+
+# Development tools
+flake8
+black
diff --git a/routes.py b/routes.py
deleted file mode 100644
index f26d6a8..0000000
--- a/routes.py
+++ /dev/null
@@ -1,42 +0,0 @@
-from fastapi import APIRouter, Depends, HTTPException
-from sqlalchemy.orm import Session
-from database import get_db
-from crud import create_profile, get_profile, get_profiles, update_profile, delete_profile
-from schemas import ProfileCreate, ProfileUpdate, ProfileResponse
-from typing import List
-
-router = APIRouter()
-
-# 🔹 Crear un nuevo perfil
-@router.post("/profiles/", response_model=ProfileResponse)
-def create_new_profile(profile: ProfileCreate, db: Session = Depends(get_db)):
-    return create_profile(db, profile)
-
-# 🔹 Obtener un perfil por ID
-@router.get("/profiles/{profile_id}", response_model=ProfileResponse)
-def read_profile(profile_id: int, db: Session = Depends(get_db)):
-    profile = get_profile(db, profile_id)
-    if not profile:
-        raise HTTPException(status_code=404, detail="Perfil no encontrado")
-    return profile
-
-# 🔹 Obtener todos los perfiles
-@router.get("/profiles/", response_model=List[ProfileResponse])
-def read_profiles(skip: int = 0, limit: int = 10, db: Session = Depends(get_db)):
-    return get_profiles(db, skip, limit)
-
-# 🔹 Actualizar un perfil
-@router.put("/profiles/{profile_id}", response_model=ProfileResponse)
-def update_existing_profile(profile_id: int, profile: ProfileUpdate, db: Session = Depends(get_db)):
-    updated_profile = update_profile(db, profile_id, profile)
-    if not updated_profile:
-        raise HTTPException(status_code=404, detail="Perfil no encontrado")
-    return updated_profile
-
-# 🔹 Eliminar un perfil
-@router.delete("/profiles/{profile_id}")
-def delete_existing_profile(profile_id: int, db: Session = Depends(get_db)):
-    deleted_profile = delete_profile(db, profile_id)
-    if not deleted_profile:
-        raise HTTPException(status_code=404, detail="Perfil no encontrado")
-    return {"message": "Perfil eliminado"}
diff --git a/run_tests.sh b/run_tests.sh
old mode 100644
new mode 100755
index d3827a3..c2ce488
--- a/run_tests.sh
+++ b/run_tests.sh
@@ -10,17 +10,26 @@ if [ "$1" == "--install" ]; then
     pip install -r requirements.txt
 fi
 
-# Run the tests
-echo "🚀 Running tests..."
-pytest
+# Load test environment variables
+echo "📝 Loading test environment variables..."
+export $(grep -v '^#' .env.test | xargs)
+
+# Remove existing test database if it exists
+echo "🗑️ Cleaning up old test database..."
+if [ -f "./test.db" ]; then
+    rm ./test.db
+fi
+
+# Run the tests with coverage
+echo "🚀 Running tests with coverage..."
+TEST_DATABASE_URL=sqlite:///./test.db PYTHONPATH=. pytest --cov=. --cov-report=html
 
 # Check the exit code
 if [ $? -eq 0 ]; then
     echo "✅ Tests passed! The testing setup is working correctly."
+    echo "📊 Coverage report generated in the htmlcov/ directory."
 else
     echo "❌ Tests failed. Please check the error messages above."
+    echo "📊 A partial coverage report may have been generated in the htmlcov/ directory."
     exit 1
 fi
-
-echo "📊 To generate a coverage report, run: pytest --cov=. --cov-report=html"
-echo "📝 The report will be available in the htmlcov directory."
\ No newline at end of file
diff --git a/schemas.py b/schemas.py
deleted file mode 100644
index 688b5dc..0000000
--- a/schemas.py
+++ /dev/null
@@ -1,28 +0,0 @@
-from pydantic import BaseModel, EmailStr
-from datetime import datetime
-from typing import Optional
-
-# 🔹 Esquema para crear un perfil
-class ProfileCreate(BaseModel):
-    name: str
-    email: EmailStr
-    specialty: str
-    linkedin: Optional[str] = None
-
-# 🔹 Esquema para actualizar un perfil
-class ProfileUpdate(BaseModel):
-    name: Optional[str] = None
-    email: Optional[EmailStr] = None
-    specialty: Optional[str] = None
-    linkedin: Optional[str] = None
-    status: Optional[str] = None
-
-# 🔹 Esquema para mostrar un perfil
-class ProfileResponse(ProfileCreate):
-    id: int
-    status: str
-    start_date: datetime
-    end_date: Optional[datetime] = None
-
-    class Config:
-        from_attributes = True
diff --git a/test-coverage.sh b/test-coverage.sh
old mode 100644
new mode 100755
diff --git a/test-docker.sh b/test-docker.sh
old mode 100644
new mode 100755
diff --git a/tests/conftest.py b/tests/conftest.py
index 00fc022..682a003 100644
--- a/tests/conftest.py
+++ b/tests/conftest.py
@@ -5,28 +5,40 @@ from sqlalchemy.orm import sessionmaker
 from fastapi.testclient import TestClient
 from sqlalchemy.pool import StaticPool
 
-from config.database import Base, get_db
-from main import app
-from models import Profile, ProfileStatus
+from app.config.database import Base, get_db
+from app.main import app
+from app.db.profile_models import Profile
+from app.entities import ProfileStatus
 
 # Test database URL - using SQLite in-memory database for tests
 TEST_DATABASE_URL = "sqlite:///./test.db"
 
+
 @pytest.fixture(scope="session")
 def test_engine():
     """Create a SQLite in-memory database engine for testing."""
+    # Remove existing test database if it exists
+    if os.path.exists("./test.db"):
+        os.remove("./test.db")
+
     engine = create_engine(
         TEST_DATABASE_URL,
         connect_args={"check_same_thread": False},
         poolclass=StaticPool,
     )
+
+    # Drop all tables and recreate them
+    Base.metadata.drop_all(bind=engine)
     Base.metadata.create_all(bind=engine)
+
     yield engine
+
     # Clean up after tests
     Base.metadata.drop_all(bind=engine)
     if os.path.exists("./test.db"):
         os.remove("./test.db")
 
+
 @pytest.fixture(scope="function")
 def db_session(test_engine):
     """Create a new database session for a test."""
@@ -37,33 +49,41 @@ def db_session(test_engine):
     finally:
         session.close()
 
+
 @pytest.fixture(scope="function")
 def client(db_session):
     """Create a test client for the FastAPI app."""
+
     def override_get_db():
         try:
             yield db_session
         finally:
             pass
-    
+
     app.dependency_overrides[get_db] = override_get_db
     with TestClient(app) as test_client:
         yield test_client
-    
+
     # Remove the override after the test
     app.dependency_overrides.clear()
 
+
 @pytest.fixture(scope="function")
-def test_profile(db_session):
+def test_profile(db_session, request):
     """Create a test profile for testing."""
+    # Generate unique email and linkedin for each test function
+    import uuid
+
+    unique_id = str(uuid.uuid4())
+    test_name = request.node.name
     profile = Profile(
         name="Test User",
-        email="test@example.com",
+        email=f"test_{test_name}_{unique_id}@example.com",
         specialty="Testing",
-        linkedin="https://linkedin.com/in/testuser",
-        status=ProfileStatus.ACTIVE
+        linkedin=f"https://linkedin.com/in/testuser_{test_name}_{unique_id}",
+        status=ProfileStatus.ACTIVE,
     )
     db_session.add(profile)
     db_session.commit()
     db_session.refresh(profile)
-    return profile
\ No newline at end of file
+    return profile
diff --git a/tests/integration/test_routes.py b/tests/integration/test_routes.py
index 68f5d5f..69aad69 100644
--- a/tests/integration/test_routes.py
+++ b/tests/integration/test_routes.py
@@ -1,20 +1,24 @@
 import pytest
 from fastapi.testclient import TestClient
-from models import ProfileStatus
+from app.entities import ProfileStatus
+
 
 def test_create_profile(client):
     """Test creating a profile via the API."""
-    # Profile data
+    # Profile data with unique email
+    import uuid
+
+    unique_id = str(uuid.uuid4())
     profile_data = {
         "name": "API Test User",
-        "email": "api_test@example.com",
+        "email": f"api_test_{unique_id}@example.com",
         "specialty": "API Testing",
-        "linkedin": "https://linkedin.com/in/apitester"
+        "linkedin": f"https://linkedin.com/in/apitester_{unique_id}",
     }
-    
+
     # Send POST request
     response = client.post("/profiles/", json=profile_data)
-    
+
     # Verify response
     assert response.status_code == 200
     data = response.json()
@@ -26,11 +30,12 @@ def test_create_profile(client):
     assert "id" in data
     assert "start_date" in data
 
+
 def test_get_profile(client, test_profile):
     """Test getting a profile by ID via the API."""
     # Send GET request
     response = client.get(f"/profiles/{test_profile.id}")
-    
+
     # Verify response
     assert response.status_code == 200
     data = response.json()
@@ -39,51 +44,51 @@ def test_get_profile(client, test_profile):
     assert data["email"] == test_profile.email
     assert data["specialty"] == test_profile.specialty
 
+
 def test_get_profile_not_found(client):
     """Test getting a non-existent profile via the API."""
     # Send GET request for non-existent profile
     response = client.get("/profiles/9999")
-    
+
     # Verify response
     assert response.status_code == 404
     assert "detail" in response.json()
 
+
 def test_get_profiles(client, test_profile):
     """Test getting all profiles via the API."""
-    # Create another profile first
+    # Create another profile first with unique email
     profile_data = {
         "name": "Another API User",
-        "email": "another_api@example.com",
-        "specialty": "Another API Testing"
+        "email": f"another_api_{test_profile.id}@example.com",
+        "specialty": "Another API Testing",
     }
     client.post("/profiles/", json=profile_data)
-    
+
     # Send GET request
     response = client.get("/profiles/")
-    
+
     # Verify response
     assert response.status_code == 200
     data = response.json()
     assert isinstance(data, list)
     assert len(data) >= 2  # At least the test_profile and the one we just created
-    
+
     # Test pagination
     response = client.get("/profiles/?skip=0&limit=1")
     assert response.status_code == 200
     data = response.json()
     assert len(data) == 1
 
+
 def test_update_profile(client, test_profile):
     """Test updating a profile via the API."""
     # Update data
-    update_data = {
-        "name": "Updated API Name",
-        "status": "inactive"
-    }
-    
+    update_data = {"name": "Updated API Name", "status": "INACTIVE"}
+
     # Send PUT request
     response = client.put(f"/profiles/{test_profile.id}", json=update_data)
-    
+
     # Verify response
     assert response.status_code == 200
     data = response.json()
@@ -91,41 +96,45 @@ def test_update_profile(client, test_profile):
     assert data["status"] == ProfileStatus.INACTIVE.value
     assert data["email"] == test_profile.email  # Unchanged
 
+
 def test_update_profile_not_found(client):
     """Test updating a non-existent profile via the API."""
     # Send PUT request for non-existent profile
     response = client.put("/profiles/9999", json={"name": "Not Found"})
-    
+
     # Verify response
     assert response.status_code == 404
     assert "detail" in response.json()
 
+
 def test_delete_profile(client, test_profile):
     """Test deleting a profile via the API."""
     # Send DELETE request
     response = client.delete(f"/profiles/{test_profile.id}")
-    
+
     # Verify response
     assert response.status_code == 200
     data = response.json()
     assert data["message"] == "Perfil eliminado"
-    
+
     # Verify profile is deleted
     response = client.get(f"/profiles/{test_profile.id}")
     assert response.status_code == 404
 
+
 def test_delete_profile_not_found(client):
     """Test deleting a non-existent profile via the API."""
     # Send DELETE request for non-existent profile
     response = client.delete("/profiles/9999")
-    
+
     # Verify response
     assert response.status_code == 404
     assert "detail" in response.json()
 
+
 def test_root_endpoint(client):
     """Test the root endpoint."""
     response = client.get("/")
     assert response.status_code == 200
     data = response.json()
-    assert "message" in data
\ No newline at end of file
+    assert "message" in data
diff --git a/tests/unit/test_crud.py b/tests/unit/test_crud.py
index c2a9c25..f9a7013 100644
--- a/tests/unit/test_crud.py
+++ b/tests/unit/test_crud.py
@@ -1,96 +1,151 @@
 import pytest
-from crud import create_profile, get_profile, get_profiles, update_profile, delete_profile
-from models import Profile, ProfileHistory, ProfileStatus
-from schemas import ProfileCreate, ProfileUpdate
+from app.api.profile_api import ProfileApi
+from app.db.profile_repository import ProfileRepository as ProfileRepositoryImpl
+from app.db.profile_models import ProfileHistory
+from app.entities import ProfileStatus
+from app.api.profile_schemas import ProfileCreate, ProfileUpdate
+from app.services.profile_service import ProfileService
+
 
 def test_create_profile(db_session):
-    """Test creating a profile using the CRUD function."""
-    # Create profile data
+    """Test creating a profile using the ProfileApi."""
+    # Create profile data with unique email
+    import uuid
+
+    unique_id = str(uuid.uuid4())
     profile_data = ProfileCreate(
         name="Test User",
-        email="test_crud@example.com",
+        email=f"test_crud_{unique_id}@example.com",
         specialty="Testing",
-        linkedin="https://linkedin.com/in/testcrud"
+        linkedin=f"https://linkedin.com/in/testcrud_{unique_id}",
     )
-    
+
+    # Create repository, service, and API
+    repository = ProfileRepositoryImpl(db_session)
+    service = ProfileService(repository)
+    profile_service = ProfileApi(service)
+
     # Create profile
-    profile = create_profile(db_session, profile_data)
-    
+    profile = profile_service.create_profile(
+        name=profile_data.name,
+        email=profile_data.email,
+        specialty=profile_data.specialty,
+        linkedin=profile_data.linkedin
+    )
+
     # Verify profile was created
     assert profile.id is not None
     assert profile.name == "Test User"
-    assert profile.email == "test_crud@example.com"
+    assert profile.email == profile_data.email
     assert profile.specialty == "Testing"
-    assert profile.linkedin == "https://linkedin.com/in/testcrud"
+    assert profile.linkedin == profile_data.linkedin
     assert profile.status == ProfileStatus.ACTIVE
-    
+
     # Verify history was created
-    histories = db_session.query(ProfileHistory).filter(ProfileHistory.profile_id == profile.id).all()
+    histories = (
+        db_session.query(ProfileHistory).filter(ProfileHistory.profile_id == profile.id).all()
+    )
     assert len(histories) == 1
     assert histories[0].status == ProfileStatus.ACTIVE
 
+
 def test_get_profile(db_session, test_profile):
     """Test getting a profile by ID."""
+    # Create repository, service, and API
+    repository = ProfileRepositoryImpl(db_session)
+    service = ProfileService(repository)
+    profile_service = ProfileApi(service)
+
     # Get the profile
-    profile = get_profile(db_session, test_profile.id)
-    
+    profile = profile_service.get_profile(test_profile.id)
+
     # Verify profile was retrieved
     assert profile is not None
     assert profile.id == test_profile.id
     assert profile.name == test_profile.name
     assert profile.email == test_profile.email
 
+
 def test_get_profiles(db_session, test_profile):
     """Test getting multiple profiles with pagination."""
-    # Create another profile
+    # Create repository, service, and API
+    repository = ProfileRepositoryImpl(db_session)
+    service = ProfileService(repository)
+    profile_service = ProfileApi(service)
+
+    # Create another profile with unique email
     profile_data = ProfileCreate(
         name="Another User",
-        email="another@example.com",
-        specialty="Another Specialty"
+        email=f"another_{test_profile.id}@example.com",
+        specialty="Another Specialty",
+        linkedin="https://linkedin.com/in/anotheruser",
+    )
+    another_profile = profile_service.create_profile(
+        name=profile_data.name,
+        email=profile_data.email,
+        specialty=profile_data.specialty,
+        linkedin=profile_data.linkedin
     )
-    another_profile = create_profile(db_session, profile_data)
-    
+
     # Get profiles with pagination
-    profiles = get_profiles(db_session, skip=0, limit=10)
-    
+    profiles = profile_service.get_profiles(skip=0, limit=10)
+
     # Verify profiles were retrieved
-    assert len(profiles) == 2
+    assert len(profiles) >= 2  # At least the test_profile and another_profile
     assert any(p.id == test_profile.id for p in profiles)
     assert any(p.id == another_profile.id for p in profiles)
-    
+
     # Test pagination
-    profiles_limited = get_profiles(db_session, skip=0, limit=1)
+    profiles_limited = profile_service.get_profiles(skip=0, limit=1)
     assert len(profiles_limited) == 1
 
+
 def test_update_profile(db_session, test_profile):
     """Test updating a profile."""
+    # Create repository, service, and API
+    repository = ProfileRepositoryImpl(db_session)
+    service = ProfileService(repository)
+    profile_service = ProfileApi(service)
+
     # Update data
-    update_data = ProfileUpdate(
-        name="Updated Name",
-        status="inactive"
-    )
-    
+    update_data = ProfileUpdate(name="Updated Name", status="INACTIVE")
+
     # Update profile
-    updated_profile = update_profile(db_session, test_profile.id, update_data)
-    
+    updated_profile = profile_service.update_profile(
+        profile_id=test_profile.id,
+        name=update_data.name,
+        status=update_data.status
+    )
+
     # Verify profile was updated
     assert updated_profile.name == "Updated Name"
     assert updated_profile.status == ProfileStatus.INACTIVE
     assert updated_profile.email == test_profile.email  # Unchanged
-    
+
     # Verify history was created for status change
-    histories = db_session.query(ProfileHistory).filter(ProfileHistory.profile_id == test_profile.id).all()
+    histories = (
+        db_session.query(ProfileHistory).filter(ProfileHistory.profile_id == test_profile.id).all()
+    )
     assert len(histories) == 1
     assert histories[0].status == ProfileStatus.INACTIVE
 
+
 def test_delete_profile(db_session, test_profile):
     """Test deleting a profile."""
+    # Create repository, service, and API
+    repository = ProfileRepositoryImpl(db_session)
+    service = ProfileService(repository)
+    profile_service = ProfileApi(service)
+
+    # Store profile ID before deletion
+    profile_id = test_profile.id
+
     # Delete profile
-    deleted_profile = delete_profile(db_session, test_profile.id)
-    
+    deleted_profile = profile_service.delete_profile(profile_id)
+
     # Verify profile was deleted
-    assert deleted_profile.id == test_profile.id
-    
+    assert deleted_profile.id == profile_id
+
     # Verify profile no longer exists in database
-    profile = get_profile(db_session, test_profile.id)
-    assert profile is None
\ No newline at end of file
+    profile = profile_service.get_profile(profile_id)
+    assert profile is None
diff --git a/tests/unit/test_models.py b/tests/unit/test_models.py
index ef05ed8..a72e5cb 100644
--- a/tests/unit/test_models.py
+++ b/tests/unit/test_models.py
@@ -1,6 +1,8 @@
 import pytest
 from datetime import datetime
-from models import Profile, ProfileHistory, ProfileStatus
+from app.db.profile_models import Profile, ProfileHistory
+from app.entities import ProfileStatus
+
 
 def test_profile_model(db_session):
     """Test creating a Profile model instance."""
@@ -10,14 +12,14 @@ def test_profile_model(db_session):
         email="john@example.com",
         specialty="Software Engineering",
         linkedin="https://linkedin.com/in/johndoe",
-        status=ProfileStatus.ACTIVE
+        status=ProfileStatus.ACTIVE,
     )
-    
+
     # Add to session and commit
     db_session.add(profile)
     db_session.commit()
     db_session.refresh(profile)
-    
+
     # Verify the profile was created with correct attributes
     assert profile.id is not None
     assert profile.name == "John Doe"
@@ -28,6 +30,7 @@ def test_profile_model(db_session):
     assert isinstance(profile.start_date, datetime)
     assert profile.end_date is None
 
+
 def test_profile_history_model(db_session):
     """Test creating a ProfileHistory model instance."""
     # Create a profile first
@@ -35,34 +38,32 @@ def test_profile_history_model(db_session):
         name="Jane Smith",
         email="jane@example.com",
         specialty="Data Science",
-        status=ProfileStatus.ACTIVE
+        status=ProfileStatus.ACTIVE,
     )
     db_session.add(profile)
     db_session.commit()
     db_session.refresh(profile)
-    
+
     # Create a history entry
-    history = ProfileHistory(
-        profile_id=profile.id,
-        status=ProfileStatus.ACTIVE
-    )
+    history = ProfileHistory(profile_id=profile.id, status=ProfileStatus.ACTIVE)
     db_session.add(history)
     db_session.commit()
     db_session.refresh(history)
-    
+
     # Verify the history entry was created with correct attributes
     assert history.id is not None
     assert history.profile_id == profile.id
     assert history.status == ProfileStatus.ACTIVE
     assert isinstance(history.changed_at, datetime)
-    
+
     # Verify the relationship works
     assert history.profile.id == profile.id
     assert profile.history[0].id == history.id
 
+
 def test_profile_status_enum():
     """Test the ProfileStatus enum values."""
     assert ProfileStatus.ACTIVE.value == "active"
     assert ProfileStatus.INACTIVE.value == "inactive"
     assert ProfileStatus.SUSPENDED.value == "suspended"
-    assert ProfileStatus.DELETED.value == "deleted"
\ No newline at end of file
+    assert ProfileStatus.DELETED.value == "deleted"